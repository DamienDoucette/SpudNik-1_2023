

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jun 20 13:40:46 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F15Q40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13   000000                     
    14                           ; Generated 23/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F15Q40 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48   000000                     _ADRESL	set	1002
    49   000000                     _ADRESH	set	1003
    50   000000                     _ADPCH	set	1004
    51   000000                     _ADACQ	set	1006
    52   000000                     _ADCON0bits	set	1011
    53   000000                     _ANSELBbits	set	1032
    54   000000                     _TRISBbits	set	1223
    55                           
    56                           ; #config settings
    57                           
    58                           	psect	cinit
    59   007F80                     __pcinit:
    60                           	callstack 0
    61   007F80                     start_initialization:
    62                           	callstack 0
    63   007F80                     __initialization:
    64                           	callstack 0
    65   007F80                     end_of_initialization:
    66                           	callstack 0
    67   007F80                     __end_of__initialization:
    68                           	callstack 0
    69   007F80  0100               	movlb	0
    70   007F82  EFC8  F03F         	goto	_main	;jump to C main() function
    71                           
    72                           	psect	cstackCOMRAM
    73   000501                     __pcstackCOMRAM:
    74                           	callstack 0
    75   000501                     ?_ADCread:
    76                           	callstack 0
    77                           
    78                           ; 2 bytes @ 0x0
    79   000501                     	ds	2
    80   000503                     ADCread@resultHigh:
    81                           	callstack 0
    82                           
    83                           ; 1 bytes @ 0x2
    84   000503                     	ds	1
    85   000504                     ADCread@resultLow:
    86                           	callstack 0
    87                           
    88                           ; 1 bytes @ 0x3
    89   000504                     	ds	1
    90   000505                     ADCread@result:
    91                           	callstack 0
    92                           
    93                           ; 2 bytes @ 0x4
    94   000505                     	ds	2
    95   000507                     
    96                           ; 1 bytes @ 0x6
    97 ;;
    98 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    99 ;;
   100 ;; *************** function _main *****************
   101 ;; Defined at:
   102 ;;		line 55 in file "main.c"
   103 ;; Parameters:    Size  Location     Type
   104 ;;		None
   105 ;; Auto vars:     Size  Location     Type
   106 ;;		None
   107 ;; Return value:  Size  Location     Type
   108 ;;                  1    wreg      void 
   109 ;; Registers used:
   110 ;;		wreg, status,2, status,0, cstack
   111 ;; Tracked objects:
   112 ;;		On entry : 0/0
   113 ;;		On exit  : 0/0
   114 ;;		Unchanged: 0/0
   115 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   116 ;;      Params:         0       0       0       0       0       0       0       0       0
   117 ;;      Locals:         0       0       0       0       0       0       0       0       0
   118 ;;      Temps:          0       0       0       0       0       0       0       0       0
   119 ;;      Totals:         0       0       0       0       0       0       0       0       0
   120 ;;Total ram usage:        0 bytes
   121 ;; Hardware stack levels required when called: 2
   122 ;; This function calls:
   123 ;;		_ADCsetup
   124 ;;		_loop
   125 ;; This function is called by:
   126 ;;		Startup code after reset
   127 ;; This function uses a non-reentrant model
   128 ;;
   129                           
   130                           	psect	text0
   131   007F90                     __ptext0:
   132                           	callstack 0
   133   007F90                     _main:
   134                           	callstack 125
   135   007F90                     
   136                           ;main.c: 56:     ADCsetup();
   137   007F90  ECCE  F03F         	call	_ADCsetup	;wreg free
   138   007F94                     
   139                           ;main.c: 57:     loop();
   140   007F94  ECC3  F03F         	call	_loop	;wreg free
   141   007F98  EFFE  F03F         	goto	start
   142   007F9C                     __end_of_main:
   143                           	callstack 0
   144                           
   145 ;; *************** function _loop *****************
   146 ;; Defined at:
   147 ;;		line 49 in file "main.c"
   148 ;; Parameters:    Size  Location     Type
   149 ;;		None
   150 ;; Auto vars:     Size  Location     Type
   151 ;;  Chan1           1    0        unsigned char 
   152 ;; Return value:  Size  Location     Type
   153 ;;                  1    wreg      void 
   154 ;; Registers used:
   155 ;;		wreg, status,2, status,0, cstack
   156 ;; Tracked objects:
   157 ;;		On entry : 0/0
   158 ;;		On exit  : 0/0
   159 ;;		Unchanged: 0/0
   160 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   161 ;;      Params:         0       0       0       0       0       0       0       0       0
   162 ;;      Locals:         0       0       0       0       0       0       0       0       0
   163 ;;      Temps:          0       0       0       0       0       0       0       0       0
   164 ;;      Totals:         0       0       0       0       0       0       0       0       0
   165 ;;Total ram usage:        0 bytes
   166 ;; Hardware stack levels used: 1
   167 ;; Hardware stack levels required when called: 1
   168 ;; This function calls:
   169 ;;		_ADCread
   170 ;; This function is called by:
   171 ;;		_main
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text1
   176   007F86                     __ptext1:
   177                           	callstack 0
   178   007F86                     _loop:
   179                           	callstack 125
   180   007F86                     l26:
   181   007F86  ECE0  F03F         	call	_ADCread	;wreg free
   182   007F8A  EFC3  F03F         	goto	l26
   183   007F8E  0012               	return		;funcret
   184   007F90                     __end_of_loop:
   185                           	callstack 0
   186                           
   187 ;; *************** function _ADCread *****************
   188 ;; Defined at:
   189 ;;		line 34 in file "main.c"
   190 ;; Parameters:    Size  Location     Type
   191 ;;		None
   192 ;; Auto vars:     Size  Location     Type
   193 ;;  result          2    4[COMRAM] unsigned short 
   194 ;;  resultLow       1    3[COMRAM] unsigned char 
   195 ;;  resultHigh      1    2[COMRAM] unsigned char 
   196 ;; Return value:  Size  Location     Type
   197 ;;                  2    0[COMRAM] unsigned short 
   198 ;; Registers used:
   199 ;;		wreg, status,2, status,0
   200 ;; Tracked objects:
   201 ;;		On entry : 0/0
   202 ;;		On exit  : 0/0
   203 ;;		Unchanged: 0/0
   204 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   205 ;;      Params:         2       0       0       0       0       0       0       0       0
   206 ;;      Locals:         4       0       0       0       0       0       0       0       0
   207 ;;      Temps:          0       0       0       0       0       0       0       0       0
   208 ;;      Totals:         6       0       0       0       0       0       0       0       0
   209 ;;Total ram usage:        6 bytes
   210 ;; Hardware stack levels used: 1
   211 ;; This function calls:
   212 ;;		Nothing
   213 ;; This function is called by:
   214 ;;		_loop
   215 ;; This function uses a non-reentrant model
   216 ;;
   217                           
   218                           	psect	text2
   219   007FC0                     __ptext2:
   220                           	callstack 0
   221   007FC0                     _ADCread:
   222                           	callstack 125
   223   007FC0                     
   224                           ;main.c: 36:     ADCON0bits.GO = 1;
   225   007FC0  0103               	movlb	3	; () banked
   226   007FC2  81F3               	bsf	243,0,b	;volatile
   227   007FC4                     l20:
   228                           
   229                           ; BSR set to: 3
   230   007FC4  B1F3               	btfsc	243,0,b	;volatile
   231   007FC6  EFE7  F03F         	goto	u21
   232   007FCA  EFE9  F03F         	goto	u20
   233   007FCE                     u21:
   234   007FCE  EFE2  F03F         	goto	l20
   235   007FD2                     u20:
   236   007FD2                     
   237                           ; BSR set to: 3
   238                           ;main.c: 38:     uint8_t resultHigh = ADRESH;
   239   007FD2  C3EB F503          	movff	1003,ADCread@resultHigh	;volatile
   240                           
   241                           ;main.c: 39:     uint8_t resultLow = ADRESL;
   242   007FD6  C3EA F504          	movff	1002,ADCread@resultLow	;volatile
   243                           
   244                           ;main.c: 42:     uint16_t result = resultHigh;
   245   007FDA  C503  F505         	movff	ADCread@resultHigh,ADCread@result
   246   007FDE  6A06               	clrf	(ADCread@result+1)^(0+1280),c
   247   007FE0                     
   248                           ; BSR set to: 3
   249                           ;main.c: 43:     result = result << 8;
   250   007FE0  5005               	movf	ADCread@result^(0+1280),w,c
   251   007FE2  6E06               	movwf	(ADCread@result+1)^(0+1280),c
   252   007FE4  6A05               	clrf	ADCread@result^(0+1280),c
   253   007FE6                     
   254                           ; BSR set to: 3
   255                           ;main.c: 44:     result = result + resultLow;
   256   007FE6  5004               	movf	ADCread@resultLow^(0+1280),w,c
   257   007FE8  2405               	addwf	ADCread@result^(0+1280),w,c
   258   007FEA  6E05               	movwf	ADCread@result^(0+1280),c
   259   007FEC  0E00               	movlw	0
   260   007FEE  2006               	addwfc	(ADCread@result+1)^(0+1280),w,c
   261   007FF0  6E06               	movwf	(ADCread@result+1)^(0+1280),c
   262   007FF2                     
   263                           ; BSR set to: 3
   264                           ;main.c: 46:     return result;
   265   007FF2  C505  F501         	movff	ADCread@result,?_ADCread
   266   007FF6  C506  F502         	movff	ADCread@result+1,?_ADCread+1
   267   007FFA                     
   268                           ; BSR set to: 3
   269   007FFA  0012               	return		;funcret
   270   007FFC                     __end_of_ADCread:
   271                           	callstack 0
   272                           
   273 ;; *************** function _ADCsetup *****************
   274 ;; Defined at:
   275 ;;		line 17 in file "main.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;		None
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, status,2
   284 ;; Tracked objects:
   285 ;;		On entry : 0/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   289 ;;      Params:         0       0       0       0       0       0       0       0       0
   290 ;;      Locals:         0       0       0       0       0       0       0       0       0
   291 ;;      Temps:          0       0       0       0       0       0       0       0       0
   292 ;;      Totals:         0       0       0       0       0       0       0       0       0
   293 ;;Total ram usage:        0 bytes
   294 ;; Hardware stack levels used: 1
   295 ;; This function calls:
   296 ;;		Nothing
   297 ;; This function is called by:
   298 ;;		_main
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302                           	psect	text3
   303   007F9C                     __ptext3:
   304                           	callstack 0
   305   007F9C                     _ADCsetup:
   306                           	callstack 126
   307   007F9C                     
   308                           ;main.c: 19:     ADPCH = 0b001101;
   309   007F9C  0E0D               	movlw	13
   310   007F9E  0103               	movlb	3	; () banked
   311   007FA0  6FEC               	movwf	236,b	;volatile
   312   007FA2                     
   313                           ; BSR set to: 3
   314                           ;main.c: 20:     TRISBbits.TRISB5 = 1;
   315   007FA2  8AC7               	bsf	199,5,c	;volatile
   316   007FA4                     
   317                           ; BSR set to: 3
   318                           ;main.c: 21:     ANSELBbits.ANSELB5 = 1;
   319   007FA4  0104               	movlb	4	; () banked
   320   007FA6  8B08               	bsf	8,5,b	;volatile
   321                           
   322                           ;main.c: 28:     ADCON0bits.FM = 1;
   323   007FA8  0103               	movlb	3	; () banked
   324   007FAA  51F3               	movf	243,w,b	;volatile
   325   007FAC  0BF3               	andlw	-13
   326   007FAE  0904               	iorlw	4
   327   007FB0  6FF3               	movwf	243,b	;volatile
   328   007FB2                     
   329                           ; BSR set to: 3
   330                           ;main.c: 29:     ADCON0bits.CS = 1;
   331   007FB2  89F3               	bsf	243,4,b	;volatile
   332                           
   333                           ;main.c: 30:     ADACQ = 32;
   334   007FB4  0E00               	movlw	0
   335   007FB6  6FEF               	movwf	239,b	;volatile
   336   007FB8  0E20               	movlw	32
   337   007FBA  6FEE               	movwf	238,b	;volatile
   338   007FBC                     
   339                           ; BSR set to: 3
   340                           ;main.c: 31:     ADCON0bits.ON = 1;
   341   007FBC  8FF3               	bsf	243,7,b	;volatile
   342   007FBE                     
   343                           ; BSR set to: 3
   344   007FBE  0012               	return		;funcret
   345   007FC0                     __end_of_ADCsetup:
   346                           	callstack 0
   347   000000                     
   348                           	psect	rparam
   349   000000                     tosu	equ	0x4FF
   350                           tosh	equ	0x4FE
   351                           tosl	equ	0x4FD
   352                           stkptr	equ	0x4FC
   353                           pclatu	equ	0x4FB
   354                           pclath	equ	0x4FA
   355                           pcl	equ	0x4F9
   356                           tblptru	equ	0x4F8
   357                           tblptrh	equ	0x4F7
   358                           tblptrl	equ	0x4F6
   359                           tablat	equ	0x4F5
   360                           prodh	equ	0x4F4
   361                           prodl	equ	0x4F3
   362                           indf0	equ	0x4EF
   363                           postinc0	equ	0x4EE
   364                           postdec0	equ	0x4ED
   365                           preinc0	equ	0x4EC
   366                           plusw0	equ	0x4EB
   367                           fsr0h	equ	0x4EA
   368                           fsr0l	equ	0x4E9
   369                           wreg	equ	0x4E8
   370                           indf1	equ	0x4E7
   371                           postinc1	equ	0x4E6
   372                           postdec1	equ	0x4E5
   373                           preinc1	equ	0x4E4
   374                           plusw1	equ	0x4E3
   375                           fsr1h	equ	0x4E2
   376                           fsr1l	equ	0x4E1
   377                           bsr	equ	0x4E0
   378                           indf2	equ	0x4DF
   379                           postinc2	equ	0x4DE
   380                           postdec2	equ	0x4DD
   381                           preinc2	equ	0x4DC
   382                           plusw2	equ	0x4DB
   383                           fsr2h	equ	0x4DA
   384                           fsr2l	equ	0x4D9
   385                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _loop->_ADCread

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     116
                           _ADCsetup
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 1     1      0     116
                            _ADCread
 ---------------------------------------------------------------------------------
 (2) _ADCread                                              6     4      2     115
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADCsetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCsetup
   _loop
     _ADCread

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             200      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBIGSFR_1        100      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITBIGSFRhh         38      0       0      22        0.0%
BITBIGSFRhlh        BE      0       0      23        0.0%
BITBIGSFRhllh       14      0       0      24        0.0%
BITBIGSFRhlllh       3      0       0      25        0.0%
BITBIGSFRhllll       1      0       0      26        0.0%
BITBIGSFRl         3EA      0       0      27        0.0%
ABS                  0      0       0      28        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jun 20 13:40:46 2023

                     l20 7FC4                       l22 7FD2                       l23 7FFA  
                     l17 7FBE                       l26 7F86                       l34 7F98  
                     u20 7FD2                       u21 7FCE                      l720 7F9C  
                    l722 7FA2                      l724 7FA4                      l740 7FE0  
                    l726 7FB2                      l742 7FE6                      l750 7F90  
                    l728 7FBC                      l744 7FF2                      l752 7F94  
                    l738 7FC0                      l748 7F86          __end_of_ADCread 7FFC  
                   _main 7F90                     _loop 7F86                     start 7FFC  
       __end_of_ADCsetup 7FC0             ___param_bank 0000                    _ADACQ 03EE  
                  ?_main 0501                    _ADPCH 03EC                    ?_loop 0501  
       ADCread@resultLow 0504          __initialization 7F80             __end_of_main 7F9C  
           __end_of_loop 7F90                ??_ADCread 0503                   ??_main 0507  
                 ??_loop 0507            __activetblptr 0000                   _ADRESH 03EB  
                 _ADRESL 03EA                   isa$std 0001                ?_ADCsetup 0501  
             __accesstop 0560  __end_of__initialization 7F80            ___rparam_used 0001  
      ADCread@resultHigh 0503            ADCread@result 0505           __pcstackCOMRAM 0501  
             ??_ADCsetup 0501                  _ADCread 7FC0                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7F80                  __ramtop 0E00  
                __ptext0 7F90                  __ptext1 7F86                  __ptext2 7FC0  
                __ptext3 7F9C     end_of_initialization 7F80                _TRISBbits 04C7  
    start_initialization 7F80                 ?_ADCread 0501                 _ADCsetup 7F9C  
             _ADCON0bits 03F3                 __Hrparam 0000                 __Lrparam 0000  
             _ANSELBbits 0408                 isa$xinst 0000  
