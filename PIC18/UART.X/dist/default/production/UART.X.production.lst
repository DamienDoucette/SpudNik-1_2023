

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jul 31 14:54:51 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F15Q40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=4,class=CODE,delta=1
    12                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15   000000                     
    16                           ; Generated 21/06/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F15Q40 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     _U1CON1bits	set	684
    51   000000                     _U1BRGL	set	686
    52   000000                     _U1BRGH	set	687
    53   000000                     _U1CON2bits	set	685
    54   000000                     _OSCCON1bits	set	173
    55   000000                     _OSCFREQ	set	177
    56   000000                     _U1TXB	set	675
    57   000000                     _U1FIFObits	set	688
    58   000000                     _TRISCbits	set	1224
    59   000000                     _U1CON0bits	set	683
    60   000000                     _RC0PPS	set	529
    61   000000                     _U1RXPPS	set	626
    62   000000                     _RC1	set	9857
    63   000000                     _U1RXB	set	673
    64                           
    65                           ; #config settings
    66                           
    67                           	psect	cinit
    68   00016A                     __pcinit:
    69                           	callstack 0
    70   00016A                     start_initialization:
    71                           	callstack 0
    72   00016A                     __initialization:
    73                           	callstack 0
    74                           
    75                           ; Clear objects allocated to COMRAM (10 bytes)
    76   00016A  EE01  F101         	lfsr	0,__pbssCOMRAM
    77   00016E  0E0A               	movlw	10
    78   000170                     clear_0:
    79   000170  6AEE               	clrf	postinc0,c
    80   000172  06E8               	decf	wreg,f,c
    81   000174  E1FD               	bnz	clear_0
    82                           
    83                           ;
    84                           ; Setup IVTBASE
    85                           ;
    86   000176  0104               	movlb	4
    87   000178  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
    88   00017A  6F5D               	movwf	93,b
    89   00017C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
    90   00017E  6F5E               	movwf	94,b
    91   000180  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
    92   000182  6F5F               	movwf	95,b
    93   000184                     end_of_initialization:
    94                           	callstack 0
    95   000184                     __end_of__initialization:
    96                           	callstack 0
    97   000184  0100               	movlb	0
    98   000186  EFC5  F000         	goto	_main	;jump to C main() function
    99                           
   100                           	psect	bssCOMRAM
   101   000501                     __pbssCOMRAM:
   102                           	callstack 0
   103   000501                     _receive:
   104                           	callstack 0
   105   000501                     	ds	8
   106   000509                     _count:
   107                           	callstack 0
   108   000509                     	ds	2
   109                           
   110                           	psect	cstackCOMRAM
   111   00050B                     __pcstackCOMRAM:
   112                           	callstack 0
   113   00050B                     ISR@timeout:
   114                           	callstack 0
   115                           
   116                           ; 2 bytes @ 0x0
   117   00050B                     	ds	2
   118   00050D                     
   119                           ; 1 bytes @ 0x2
   120 ;;
   121 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   122 ;;
   123 ;; *************** function _main *****************
   124 ;; Defined at:
   125 ;;		line 83 in file "main.c"
   126 ;; Parameters:    Size  Location     Type
   127 ;;		None
   128 ;; Auto vars:     Size  Location     Type
   129 ;;		None
   130 ;; Return value:  Size  Location     Type
   131 ;;                  1    wreg      void 
   132 ;; Registers used:
   133 ;;		wreg, status,2, cstack
   134 ;; Tracked objects:
   135 ;;		On entry : 0/0
   136 ;;		On exit  : 0/0
   137 ;;		Unchanged: 0/0
   138 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   139 ;;      Params:         0       0       0       0       0       0       0       0       0
   140 ;;      Locals:         0       0       0       0       0       0       0       0       0
   141 ;;      Temps:          0       0       0       0       0       0       0       0       0
   142 ;;      Totals:         0       0       0       0       0       0       0       0       0
   143 ;;Total ram usage:        0 bytes
   144 ;; Hardware stack levels required when called: 2
   145 ;; This function calls:
   146 ;;		_loop
   147 ;;		_setup
   148 ;; This function is called by:
   149 ;;		Startup code after reset
   150 ;; This function uses a non-reentrant model
   151 ;;
   152                           
   153                           	psect	text0
   154   00018A                     __ptext0:
   155                           	callstack 0
   156   00018A                     _main:
   157                           	callstack 125
   158   00018A                     
   159                           ;main.c: 84:     setup();
   160   00018A  EC95  F000         	call	_setup	;wreg free
   161   00018E                     l785:
   162                           
   163                           ;main.c: 87:         loop();
   164   00018E  ECCD  F000         	call	_loop	;wreg free
   165   000192  EFC7  F000         	goto	l785
   166   000196  EF5D  F000         	goto	start
   167   00019A                     __end_of_main:
   168                           	callstack 0
   169                           
   170 ;; *************** function _setup *****************
   171 ;; Defined at:
   172 ;;		line 20 in file "main.c"
   173 ;; Parameters:    Size  Location     Type
   174 ;;		None
   175 ;; Auto vars:     Size  Location     Type
   176 ;;		None
   177 ;; Return value:  Size  Location     Type
   178 ;;                  1    wreg      void 
   179 ;; Registers used:
   180 ;;		wreg, status,2
   181 ;; Tracked objects:
   182 ;;		On entry : 0/0
   183 ;;		On exit  : 0/0
   184 ;;		Unchanged: 0/0
   185 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   186 ;;      Params:         0       0       0       0       0       0       0       0       0
   187 ;;      Locals:         0       0       0       0       0       0       0       0       0
   188 ;;      Temps:          0       0       0       0       0       0       0       0       0
   189 ;;      Totals:         0       0       0       0       0       0       0       0       0
   190 ;;Total ram usage:        0 bytes
   191 ;; Hardware stack levels used: 1
   192 ;; Hardware stack levels required when called: 1
   193 ;; This function calls:
   194 ;;		Nothing
   195 ;; This function is called by:
   196 ;;		_main
   197 ;; This function uses a non-reentrant model
   198 ;;
   199                           
   200                           	psect	text1
   201   00012A                     __ptext1:
   202                           	callstack 0
   203   00012A                     _setup:
   204                           	callstack 125
   205   00012A                     
   206                           ;main.c: 21:     OSCFREQ = 0b0010;
   207   00012A  0E02               	movlw	2
   208   00012C  0100               	movlb	0	; () banked
   209   00012E  6FB1               	movwf	177,b	;volatile
   210                           
   211                           ;main.c: 22:     OSCCON1bits.NOSC = 0b110;
   212   000130  51AD               	movf	173,w,b	;volatile
   213   000132  0B8F               	andlw	-113
   214   000134  0960               	iorlw	96
   215   000136  6FAD               	movwf	173,b	;volatile
   216                           
   217                           ;main.c: 29:     RC0PPS = 0x10;
   218   000138  0E10               	movlw	16
   219   00013A  0102               	movlb	2	; () banked
   220   00013C  6F11               	movwf	17,b	;volatile
   221   00013E                     
   222                           ; BSR set to: 2
   223                           ;main.c: 30:     TRISCbits.TRISC0 = 0;
   224   00013E  90C8               	bcf	200,0,c	;volatile
   225                           
   226                           ;main.c: 31:     U1RXPPS = RC1;
   227   000140  0E00               	movlw	0
   228   000142  B2D0               	btfsc	1232,1,c	;volatile
   229   000144  0E01               	movlw	1
   230   000146  6F72               	movwf	114,b	;volatile
   231   000148                     
   232                           ; BSR set to: 2
   233                           ;main.c: 33:     U1CON0bits.BRGS = 0;
   234   000148  9FAB               	bcf	171,7,b	;volatile
   235                           
   236                           ;main.c: 34:     U1CON0bits.MODE = 0b0011;
   237   00014A  51AB               	movf	171,w,b	;volatile
   238   00014C  0BF0               	andlw	-16
   239   00014E  0903               	iorlw	3
   240   000150  6FAB               	movwf	171,b	;volatile
   241   000152                     
   242                           ; BSR set to: 2
   243                           ;main.c: 35:     U1CON0bits.RXEN = 1;
   244   000152  89AB               	bsf	171,4,b	;volatile
   245   000154                     
   246                           ; BSR set to: 2
   247                           ;main.c: 36:     U1CON0bits.TXEN = 1;
   248   000154  8BAB               	bsf	171,5,b	;volatile
   249   000156                     
   250                           ; BSR set to: 2
   251                           ;main.c: 38:     U1CON2bits.RXPOL = 0;
   252   000156  9DAD               	bcf	173,6,b	;volatile
   253   000158                     
   254                           ; BSR set to: 2
   255                           ;main.c: 39:     U1CON2bits.TXPOL = 0;
   256   000158  95AD               	bcf	173,2,b	;volatile
   257                           
   258                           ;main.c: 40:     U1CON2bits.STP = 0b00;
   259   00015A  0ECF               	movlw	-49
   260   00015C  17AD               	andwf	173,f,b	;volatile
   261                           
   262                           ;main.c: 50:     U1BRGH = 0;
   263   00015E  0E00               	movlw	0
   264   000160  6FAF               	movwf	175,b	;volatile
   265                           
   266                           ;main.c: 51:     U1BRGL = 0x19;
   267   000162  0E19               	movlw	25
   268   000164  6FAE               	movwf	174,b	;volatile
   269   000166                     
   270                           ; BSR set to: 2
   271                           ;main.c: 57:     U1CON1bits.ON = 1;
   272   000166  8FAC               	bsf	172,7,b	;volatile
   273   000168                     
   274                           ; BSR set to: 2
   275   000168  0012               	return		;funcret
   276   00016A                     __end_of_setup:
   277                           	callstack 0
   278                           
   279 ;; *************** function _loop *****************
   280 ;; Defined at:
   281 ;;		line 60 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   295 ;;      Params:         0       0       0       0       0       0       0       0       0
   296 ;;      Locals:         0       0       0       0       0       0       0       0       0
   297 ;;      Temps:          0       0       0       0       0       0       0       0       0
   298 ;;      Totals:         0       0       0       0       0       0       0       0       0
   299 ;;Total ram usage:        0 bytes
   300 ;; Hardware stack levels used: 1
   301 ;; Hardware stack levels required when called: 1
   302 ;; This function calls:
   303 ;;		Nothing
   304 ;; This function is called by:
   305 ;;		_main
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309                           	psect	text2
   310   00019A                     __ptext2:
   311                           	callstack 0
   312   00019A                     _loop:
   313                           	callstack 125
   314   00019A                     
   315                           ;main.c: 68:     _delay((unsigned long)((1)*(4000000/4000.0)));
   316   00019A  0EC8               	movlw	200
   317   00019C                     u57:
   318   00019C  D000               	nop2	
   319   00019E  2EE8               	decfsz	wreg,f,c
   320   0001A0  D7FD               	bra	u57
   321   0001A2  0012               	return		;funcret
   322   0001A4                     __end_of_loop:
   323                           	callstack 0
   324                           
   325 ;; *************** function _ISR *****************
   326 ;; Defined at:
   327 ;;		line 71 in file "main.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;  timeout         2    0[COMRAM] int 
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   341 ;;      Params:         0       0       0       0       0       0       0       0       0
   342 ;;      Locals:         2       0       0       0       0       0       0       0       0
   343 ;;      Temps:          0       0       0       0       0       0       0       0       0
   344 ;;      Totals:         2       0       0       0       0       0       0       0       0
   345 ;;Total ram usage:        2 bytes
   346 ;; Hardware stack levels used: 1
   347 ;; This function calls:
   348 ;;		Nothing
   349 ;; This function is called by:
   350 ;;		Interrupt level 2
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	text3
   355   0000C0                     __ptext3:
   356                           	callstack 0
   357   0000C0                     _ISR:
   358                           	callstack 125
   359   0000C0                     
   360                           ;main.c: 72:     int timeout = 0;
   361   0000C0  0E00               	movlw	0
   362   0000C2  6E0C               	movwf	(ISR@timeout+1)^(0+1280),c
   363   0000C4  0E00               	movlw	0
   364   0000C6  6E0B               	movwf	ISR@timeout^(0+1280),c
   365                           
   366                           ;main.c: 73:     while(~U1FIFObits.RXBF && timeout < 500){timeout++;}
   367   0000C8  EF68  F000         	goto	i2l773
   368   0000CC                     i2l771:
   369                           
   370                           ; BSR set to: 2
   371   0000CC  4A0B               	infsnz	ISR@timeout^(0+1280),f,c
   372   0000CE  2A0C               	incf	(ISR@timeout+1)^(0+1280),f,c
   373   0000D0                     i2l773:
   374   0000D0  0102               	movlb	2	; () banked
   375   0000D2  51B0               	movf	176,w,b	;volatile
   376   0000D4  BE0C               	btfsc	(ISR@timeout+1)^(0+1280),7,c
   377   0000D6  EF76  F000         	goto	i2u3_41
   378   0000DA  0EF4               	movlw	244
   379   0000DC  5C0B               	subwf	ISR@timeout^(0+1280),w,c
   380   0000DE  0E01               	movlw	1
   381   0000E0  580C               	subwfb	(ISR@timeout+1)^(0+1280),w,c
   382   0000E2  A0D8               	btfss	status,0,c
   383   0000E4  EF76  F000         	goto	i2u3_41
   384   0000E8  EF78  F000         	goto	i2u3_40
   385   0000EC                     i2u3_41:
   386   0000EC  EF66  F000         	goto	i2l771
   387   0000F0                     i2u3_40:
   388   0000F0                     
   389                           ; BSR set to: 2
   390                           ;main.c: 74:     receive[count] = U1RXB;
   391   0000F0  0E01               	movlw	low _receive
   392   0000F2  2409               	addwf	_count^(0+1280),w,c
   393   0000F4  6ED9               	movwf	fsr2l,c
   394   0000F6  0E05               	movlw	high _receive
   395   0000F8  200A               	addwfc	(_count+1)^(0+1280),w,c
   396   0000FA  6EDA               	movwf	fsr2h,c
   397   0000FC  C2A1 F4DF          	movff	673,indf2	;volatile
   398   000100                     
   399                           ; BSR set to: 2
   400                           ;main.c: 75:     count++;
   401   000100  4A09               	infsnz	_count^(0+1280),f,c
   402   000102  2A0A               	incf	(_count+1)^(0+1280),f,c
   403   000104                     
   404                           ; BSR set to: 2
   405                           ;main.c: 77:     if(count > 7){
   406   000104  BE0A               	btfsc	(_count+1)^(0+1280),7,c
   407   000106  EF8E  F000         	goto	i2u4_41
   408   00010A  500A               	movf	(_count+1)^(0+1280),w,c
   409   00010C  E109               	bnz	i2u4_40
   410   00010E  0E08               	movlw	8
   411   000110  5C09               	subwf	_count^(0+1280),w,c
   412   000112  A0D8               	btfss	status,0,c
   413   000114  EF8E  F000         	goto	i2u4_41
   414   000118  EF90  F000         	goto	i2u4_40
   415   00011C                     i2u4_41:
   416   00011C  EF94  F000         	goto	i2l59
   417   000120                     i2u4_40:
   418   000120                     
   419                           ; BSR set to: 2
   420                           ;main.c: 78:         count = 0;
   421   000120  0E00               	movlw	0
   422   000122  6E0A               	movwf	(_count+1)^(0+1280),c
   423   000124  0E00               	movlw	0
   424   000126  6E09               	movwf	_count^(0+1280),c
   425   000128                     i2l59:
   426                           
   427                           ; BSR set to: 2
   428   000128  0011               	retfie		f
   429   00012A                     __end_of_ISR:
   430                           	callstack 0
   431                           
   432                           ;
   433                           ; Interrupt Vector Table @ 0x8
   434                           ;
   435                           
   436                           	psect	ivt0x8
   437   000008                     __pivt0x8:
   438                           	callstack 0
   439   000008                     ivt0x8_base:
   440                           	callstack 0
   441                           
   442                           ; Vector 0 : SWINT
   443   000008  002E               	dw	ivt0x8_undefint shr (0+2)
   444                           
   445                           ; Vector 1 : HLVD
   446   00000A  002E               	dw	ivt0x8_undefint shr (0+2)
   447                           
   448                           ; Vector 2 : OSF
   449   00000C  002E               	dw	ivt0x8_undefint shr (0+2)
   450                           
   451                           ; Vector 3 : CSW
   452   00000E  002E               	dw	ivt0x8_undefint shr (0+2)
   453                           
   454                           ; Vector 4 : NVMIP
   455   000010  002E               	dw	ivt0x8_undefint shr (0+2)
   456                           
   457                           ; Vector 5 : CLC1
   458   000012  002E               	dw	ivt0x8_undefint shr (0+2)
   459                           
   460                           ; Vector 6 : CRC
   461   000014  002E               	dw	ivt0x8_undefint shr (0+2)
   462                           
   463                           ; Vector 7 : IOC
   464   000016  002E               	dw	ivt0x8_undefint shr (0+2)
   465                           
   466                           ; Vector 8 : INT0
   467   000018  002E               	dw	ivt0x8_undefint shr (0+2)
   468                           
   469                           ; Vector 9 : ZCD
   470   00001A  002E               	dw	ivt0x8_undefint shr (0+2)
   471                           
   472                           ; Vector 10 : AD
   473   00001C  002E               	dw	ivt0x8_undefint shr (0+2)
   474                           
   475                           ; Vector 11 : ACT
   476   00001E  002E               	dw	ivt0x8_undefint shr (0+2)
   477                           
   478                           ; Vector 12 : CMP1
   479   000020  002E               	dw	ivt0x8_undefint shr (0+2)
   480                           
   481                           ; Vector 13 : SMT1
   482   000022  002E               	dw	ivt0x8_undefint shr (0+2)
   483                           
   484                           ; Vector 14 : SMT1PRA
   485   000024  002E               	dw	ivt0x8_undefint shr (0+2)
   486                           
   487                           ; Vector 15 : SMT1PWA
   488   000026  002E               	dw	ivt0x8_undefint shr (0+2)
   489                           
   490                           ; Vector 16 : ADT
   491   000028  002E               	dw	ivt0x8_undefint shr (0+2)
   492                           
   493                           ; Vector 17 : Undefined
   494   00002A  002E               	dw	ivt0x8_undefint shr (0+2)
   495                           
   496                           ; Vector 18 : Undefined
   497   00002C  002E               	dw	ivt0x8_undefint shr (0+2)
   498                           
   499                           ; Vector 19 : Undefined
   500   00002E  002E               	dw	ivt0x8_undefint shr (0+2)
   501                           
   502                           ; Vector 20 : DMA1SCNT
   503   000030  002E               	dw	ivt0x8_undefint shr (0+2)
   504                           
   505                           ; Vector 21 : DMA1DCNT
   506   000032  002E               	dw	ivt0x8_undefint shr (0+2)
   507                           
   508                           ; Vector 22 : DMA1OR
   509   000034  002E               	dw	ivt0x8_undefint shr (0+2)
   510                           
   511                           ; Vector 23 : DMA1A
   512   000036  002E               	dw	ivt0x8_undefint shr (0+2)
   513                           
   514                           ; Vector 24 : SPI1RX
   515   000038  002E               	dw	ivt0x8_undefint shr (0+2)
   516                           
   517                           ; Vector 25 : SPI1TX
   518   00003A  002E               	dw	ivt0x8_undefint shr (0+2)
   519                           
   520                           ; Vector 26 : SPI1
   521   00003C  002E               	dw	ivt0x8_undefint shr (0+2)
   522                           
   523                           ; Vector 27 : TMR2
   524   00003E  002E               	dw	ivt0x8_undefint shr (0+2)
   525                           
   526                           ; Vector 28 : TMR1
   527   000040  002E               	dw	ivt0x8_undefint shr (0+2)
   528                           
   529                           ; Vector 29 : TMR1G
   530   000042  002E               	dw	ivt0x8_undefint shr (0+2)
   531                           
   532                           ; Vector 30 : CCP1
   533   000044  002E               	dw	ivt0x8_undefint shr (0+2)
   534                           
   535                           ; Vector 31 : TMR0
   536   000046  002E               	dw	ivt0x8_undefint shr (0+2)
   537                           
   538                           ; Vector 32 : U1RX
   539   000048  0030               	dw	_ISR shr (0+2)
   540                           
   541                           ; Vector 33 : U1TX
   542   00004A  002E               	dw	ivt0x8_undefint shr (0+2)
   543                           
   544                           ; Vector 34 : U1E
   545   00004C  002E               	dw	ivt0x8_undefint shr (0+2)
   546                           
   547                           ; Vector 35 : U1
   548   00004E  002E               	dw	ivt0x8_undefint shr (0+2)
   549                           
   550                           ; Vector 36 : TMR3
   551   000050  002E               	dw	ivt0x8_undefint shr (0+2)
   552                           
   553                           ; Vector 37 : TMR3G
   554   000052  002E               	dw	ivt0x8_undefint shr (0+2)
   555                           
   556                           ; Vector 38 : PWM1PR
   557   000054  002E               	dw	ivt0x8_undefint shr (0+2)
   558                           
   559                           ; Vector 39 : PWM1
   560   000056  002E               	dw	ivt0x8_undefint shr (0+2)
   561                           
   562                           ; Vector 40 : SPI2RX
   563   000058  002E               	dw	ivt0x8_undefint shr (0+2)
   564                           
   565                           ; Vector 41 : SPI2TX
   566   00005A  002E               	dw	ivt0x8_undefint shr (0+2)
   567                           
   568                           ; Vector 42 : SPI2
   569   00005C  002E               	dw	ivt0x8_undefint shr (0+2)
   570                           
   571                           ; Vector 43 : Undefined
   572   00005E  002E               	dw	ivt0x8_undefint shr (0+2)
   573                           
   574                           ; Vector 44 : CMP2
   575   000060  002E               	dw	ivt0x8_undefint shr (0+2)
   576                           
   577                           ; Vector 45 : CLC2
   578   000062  002E               	dw	ivt0x8_undefint shr (0+2)
   579                           
   580                           ; Vector 46 : PWM2PR
   581   000064  002E               	dw	ivt0x8_undefint shr (0+2)
   582                           
   583                           ; Vector 47 : PWM2
   584   000066  002E               	dw	ivt0x8_undefint shr (0+2)
   585                           
   586                           ; Vector 48 : INT1
   587   000068  002E               	dw	ivt0x8_undefint shr (0+2)
   588                           
   589                           ; Vector 49 : CWG1
   590   00006A  002E               	dw	ivt0x8_undefint shr (0+2)
   591                           
   592                           ; Vector 50 : NCO1
   593   00006C  002E               	dw	ivt0x8_undefint shr (0+2)
   594                           
   595                           ; Vector 51 : DMA2SCNT
   596   00006E  002E               	dw	ivt0x8_undefint shr (0+2)
   597                           
   598                           ; Vector 52 : DMA2DCNT
   599   000070  002E               	dw	ivt0x8_undefint shr (0+2)
   600                           
   601                           ; Vector 53 : DMA2OR
   602   000072  002E               	dw	ivt0x8_undefint shr (0+2)
   603                           
   604                           ; Vector 54 : DMA2A
   605   000074  002E               	dw	ivt0x8_undefint shr (0+2)
   606                           
   607                           ; Vector 55 : Undefined
   608   000076  002E               	dw	ivt0x8_undefint shr (0+2)
   609                           
   610                           ; Vector 56 : I2C1RX
   611   000078  002E               	dw	ivt0x8_undefint shr (0+2)
   612                           
   613                           ; Vector 57 : I2C1TX
   614   00007A  002E               	dw	ivt0x8_undefint shr (0+2)
   615                           
   616                           ; Vector 58 : I2C1
   617   00007C  002E               	dw	ivt0x8_undefint shr (0+2)
   618                           
   619                           ; Vector 59 : I2C1E
   620   00007E  002E               	dw	ivt0x8_undefint shr (0+2)
   621                           
   622                           ; Vector 60 : Undefined
   623   000080  002E               	dw	ivt0x8_undefint shr (0+2)
   624                           
   625                           ; Vector 61 : CLC3
   626   000082  002E               	dw	ivt0x8_undefint shr (0+2)
   627                           
   628                           ; Vector 62 : PWM3PR
   629   000084  002E               	dw	ivt0x8_undefint shr (0+2)
   630                           
   631                           ; Vector 63 : PWM3
   632   000086  002E               	dw	ivt0x8_undefint shr (0+2)
   633                           
   634                           ; Vector 64 : U2RX
   635   000088  002E               	dw	ivt0x8_undefint shr (0+2)
   636                           
   637                           ; Vector 65 : U2TX
   638   00008A  002E               	dw	ivt0x8_undefint shr (0+2)
   639                           
   640                           ; Vector 66 : U2E
   641   00008C  002E               	dw	ivt0x8_undefint shr (0+2)
   642                           
   643                           ; Vector 67 : U2
   644   00008E  002E               	dw	ivt0x8_undefint shr (0+2)
   645                           
   646                           ; Vector 68 : Undefined
   647   000090  002E               	dw	ivt0x8_undefint shr (0+2)
   648                           
   649                           ; Vector 69 : CLC4
   650   000092  002E               	dw	ivt0x8_undefint shr (0+2)
   651                           
   652                           ; Vector 70 : Undefined
   653   000094  002E               	dw	ivt0x8_undefint shr (0+2)
   654                           
   655                           ; Vector 71 : SCAN
   656   000096  002E               	dw	ivt0x8_undefint shr (0+2)
   657                           
   658                           ; Vector 72 : U3RX
   659   000098  002E               	dw	ivt0x8_undefint shr (0+2)
   660                           
   661                           ; Vector 73 : U3TX
   662   00009A  002E               	dw	ivt0x8_undefint shr (0+2)
   663                           
   664                           ; Vector 74 : U3E
   665   00009C  002E               	dw	ivt0x8_undefint shr (0+2)
   666                           
   667                           ; Vector 75 : U3
   668   00009E  002E               	dw	ivt0x8_undefint shr (0+2)
   669                           
   670                           ; Vector 76 : DMA3SCNT
   671   0000A0  002E               	dw	ivt0x8_undefint shr (0+2)
   672                           
   673                           ; Vector 77 : DMA3DCNT
   674   0000A2  002E               	dw	ivt0x8_undefint shr (0+2)
   675                           
   676                           ; Vector 78 : DMA3OR
   677   0000A4  002E               	dw	ivt0x8_undefint shr (0+2)
   678                           
   679                           ; Vector 79 : DMA3A
   680   0000A6  002E               	dw	ivt0x8_undefint shr (0+2)
   681                           
   682                           ; Vector 80 : INT2
   683   0000A8  002E               	dw	ivt0x8_undefint shr (0+2)
   684                           
   685                           ; Vector 81 : Undefined
   686   0000AA  002E               	dw	ivt0x8_undefint shr (0+2)
   687                           
   688                           ; Vector 82 : Undefined
   689   0000AC  002E               	dw	ivt0x8_undefint shr (0+2)
   690                           
   691                           ; Vector 83 : TMR4
   692   0000AE  002E               	dw	ivt0x8_undefint shr (0+2)
   693                           
   694                           ; Vector 84 : DMA4SCNT
   695   0000B0  002E               	dw	ivt0x8_undefint shr (0+2)
   696                           
   697                           ; Vector 85 : DMA4DCNT
   698   0000B2  002E               	dw	ivt0x8_undefint shr (0+2)
   699                           
   700                           ; Vector 86 : DMA4OR
   701   0000B4  002E               	dw	ivt0x8_undefint shr (0+2)
   702                           
   703                           ; Vector 87 : DMA4A
   704   0000B6  002E               	dw	ivt0x8_undefint shr (0+2)
   705   0000B8                     ivt0x8_undefint:
   706                           	callstack 0
   707   0000B8  00FF               	reset	
   708   000000                     
   709                           	psect	rparam
   710   000000                     tosu	equ	0x4FF
   711                           tosh	equ	0x4FE
   712                           tosl	equ	0x4FD
   713                           stkptr	equ	0x4FC
   714                           pclatu	equ	0x4FB
   715                           pclath	equ	0x4FA
   716                           pcl	equ	0x4F9
   717                           tblptru	equ	0x4F8
   718                           tblptrh	equ	0x4F7
   719                           tblptrl	equ	0x4F6
   720                           tablat	equ	0x4F5
   721                           prodh	equ	0x4F4
   722                           prodl	equ	0x4F3
   723                           indf0	equ	0x4EF
   724                           postinc0	equ	0x4EE
   725                           postdec0	equ	0x4ED
   726                           preinc0	equ	0x4EC
   727                           plusw0	equ	0x4EB
   728                           fsr0h	equ	0x4EA
   729                           fsr0l	equ	0x4E9
   730                           wreg	equ	0x4E8
   731                           indf1	equ	0x4E7
   732                           postinc1	equ	0x4E6
   733                           postdec1	equ	0x4E5
   734                           preinc1	equ	0x4E4
   735                           plusw1	equ	0x4E3
   736                           fsr1h	equ	0x4E2
   737                           fsr1l	equ	0x4E1
   738                           bsr	equ	0x4E0
   739                           indf2	equ	0x4DF
   740                           postinc2	equ	0x4DE
   741                           postdec2	equ	0x4DD
   742                           preinc2	equ	0x4DC
   743                           plusw2	equ	0x4DB
   744                           fsr2h	equ	0x4DA
   745                           fsr2l	equ	0x4D9
   746                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2      12
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
BITBIGSFRhl        217      0       0      24        0.0%
EEDATA             200      0       0       0        0.0%
BITBIGSFRllhl      15F      0       0      29        0.0%
BITBIGSFR_1        100      0       0      20        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRllll       AD      0       0      31        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRllhhl      60      0       0      28        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       C       1       12.6%
BITBIGSFRhhh        2F      0       0      22        0.0%
BITBIGSFRllhhhl     2E      0       0      27        0.0%
BITBIGSFRhhl         7      0       0      23        0.0%
BITBIGSFRlhl         7      0       0      25        0.0%
BITBIGSFRlllh        3      0       0      30        0.0%
BITBIGSFRllhhhh      1      0       0      26        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       C      32        0.0%
DATA                 0      0       C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jul 31 14:54:51 2023

                     l45 0168                       l48 01A2                       u57 019C  
                    l751 0154                      l743 012A                      l753 0156  
                    l745 013E                      l755 0158                      l747 0148  
                    l757 0166                      l749 0152                      l759 019A  
                    l783 018A                      l785 018E                      _RC1 2681  
                    _ISR 00C0                      wreg 04E8                     ?_ISR 050B  
                   i2l59 0128                     _main 018A                     _loop 019A  
                   indf2 04DF                     fsr2l 04D9                     start 00BA  
           ___param_bank 0000                    ??_ISR 050B                    ?_main 050B  
                  ?_loop 050B                    _U1RXB 02A1                    _U1TXB 02A3  
                  i2l771 00CC                    i2l781 0120                    i2l773 00D0  
                  i2l775 00F0                    i2l777 0100                    i2l769 00C0  
                  i2l779 0104                    _count 0509                    _setup 012A  
                  status 04D8          __initialization 016A             __end_of_main 019A  
           __end_of_loop 01A4                   ??_main 050D                   ??_loop 050D  
          __activetblptr 0000                   ?_setup 050B                   _U1BRGH 02AF  
                 _U1BRGL 02AE                   _RC0PPS 0211                   i2u3_40 00F0  
                 i2u3_41 00EC                   i2u4_40 0120                   i2u4_41 011C  
                 clear_0 0170                   isa$std 0001               __accesstop 0560  
__end_of__initialization 0184            ___rparam_used 0001           __pcstackCOMRAM 050B  
         ivt0x8_undefint 00B8            __end_of_setup 016A                  ??_setup 050D  
                IVTBASEH 045E                  IVTBASEL 045D                  IVTBASEU 045F  
                _U1RXPPS 0272                  _OSCFREQ 00B1                  __Hparam 0000  
                __Lparam 0000                  __pcinit 016A                  __ramtop 0E00  
                __ptext0 018A                  __ptext1 012A                  __ptext2 019A  
                __ptext3 00C0                  _receive 0501     end_of_initialization 0184  
                postinc0 04EE                _TRISCbits 04C8      start_initialization 016A  
            __end_of_ISR 012A               ivt0x8_base 0008              __pbssCOMRAM 0501  
             ISR@timeout 050B                 __Hrparam 0000                 __Lrparam 0000  
               __pivt0x8 0008               _U1CON0bits 02AB               _U1CON1bits 02AC  
             _U1CON2bits 02AD               _U1FIFObits 02B0              _OSCCON1bits 00AD  
               isa$xinst 0000                 intlevel2 0000  
