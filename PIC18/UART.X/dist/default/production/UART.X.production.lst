

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jul 26 09:51:31 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F15Q40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16   000000                     
    17                           ; Generated 21/06/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F15Q40 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     
    52                           	psect	idataCOMRAM
    53   007ED7                     __pidataCOMRAM:
    54                           	callstack 0
    55                           
    56                           ;initializer for loop@F13022
    57   007ED7  74                 	db	116
    58   007ED8  65                 	db	101
    59   007ED9  73                 	db	115
    60   007EDA  74                 	db	116
    61   007EDB  69                 	db	105
    62   007EDC  6E                 	db	110
    63   007EDD  67                 	db	103
    64   000000                     _U1CON1bits	set	684
    65   000000                     _U1BRGL	set	686
    66   000000                     _U1BRGH	set	687
    67   000000                     _U1CON2bits	set	685
    68   000000                     _OSCCON1bits	set	173
    69   000000                     _OSCENbits	set	179
    70   000000                     _U1TXB	set	675
    71   000000                     _U1FIFObits	set	688
    72   000000                     _TRISCbits	set	1224
    73   000000                     _U1CON0bits	set	683
    74   000000                     _RC0PPS	set	529
    75   000000                     _U1RXPPS	set	626
    76   000000                     _RC1	set	9857
    77                           
    78                           ; #config settings
    79                           
    80                           	psect	cinit
    81   007EEE                     __pcinit:
    82                           	callstack 0
    83   007EEE                     start_initialization:
    84                           	callstack 0
    85   007EEE                     __initialization:
    86                           	callstack 0
    87                           
    88                           ; Initialize objects allocated to COMRAM (7 bytes)
    89                           ; load TBLPTR registers with __pidataCOMRAM
    90   007EEE  0ED7               	movlw	low __pidataCOMRAM
    91   007EF0  6EF6               	movwf	tblptrl,c
    92   007EF2  0E7E               	movlw	high __pidataCOMRAM
    93   007EF4  6EF7               	movwf	tblptrh,c
    94   007EF6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    95   007EF8  6EF8               	movwf	tblptru,c
    96   007EFA  EE01  F117         	lfsr	0,__pdataCOMRAM
    97   007EFE  EE10 F007          	lfsr	1,7
    98   007F02                     copy_data0:
    99   007F02  0009               	tblrd		*+
   100   007F04  C4F5 F4EE          	movff	tablat,postinc0
   101   007F08  50E5               	movf	postdec1,w,c
   102   007F0A  50E1               	movf	fsr1l,w,c
   103   007F0C  E1FA               	bnz	copy_data0
   104                           
   105                           ; Clear objects allocated to COMRAM (10 bytes)
   106   007F0E  EE01  F10D         	lfsr	0,__pbssCOMRAM
   107   007F12  0E0A               	movlw	10
   108   007F14                     clear_0:
   109   007F14  6AEE               	clrf	postinc0,c
   110   007F16  06E8               	decf	wreg,f,c
   111   007F18  E1FD               	bnz	clear_0
   112   007F1A                     end_of_initialization:
   113                           	callstack 0
   114   007F1A                     __end_of__initialization:
   115                           	callstack 0
   116   007F1A  0100               	movlb	0
   117   007F1C  EF6F  F03F         	goto	_main	;jump to C main() function
   118                           
   119                           	psect	bssCOMRAM
   120   00050D                     __pbssCOMRAM:
   121                           	callstack 0
   122   00050D                     _receive:
   123                           	callstack 0
   124   00050D                     	ds	8
   125   000515                     _count:
   126                           	callstack 0
   127   000515                     	ds	2
   128                           
   129                           	psect	dataCOMRAM
   130   000517                     __pdataCOMRAM:
   131                           	callstack 0
   132   000517                     loop@F13022:
   133                           	callstack 0
   134   000517                     	ds	7
   135                           
   136                           	psect	cstackCOMRAM
   137   000501                     __pcstackCOMRAM:
   138                           	callstack 0
   139   000501                     TX@timeout:
   140                           	callstack 0
   141                           
   142                           ; 2 bytes @ 0x0
   143   000501                     	ds	2
   144   000503                     TX@data:
   145                           	callstack 0
   146                           
   147                           ; 1 bytes @ 0x2
   148   000503                     	ds	1
   149   000504                     loop@msg:
   150                           	callstack 0
   151                           
   152                           ; 7 bytes @ 0x3
   153   000504                     	ds	7
   154   00050B                     loop@i:
   155                           	callstack 0
   156                           
   157                           ; 2 bytes @ 0xA
   158   00050B                     	ds	2
   159   00050D                     
   160                           ; 1 bytes @ 0xC
   161 ;;
   162 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   163 ;;
   164 ;; *************** function _main *****************
   165 ;; Defined at:
   166 ;;		line 82 in file "main.c"
   167 ;; Parameters:    Size  Location     Type
   168 ;;		None
   169 ;; Auto vars:     Size  Location     Type
   170 ;;		None
   171 ;; Return value:  Size  Location     Type
   172 ;;                  1    wreg      void 
   173 ;; Registers used:
   174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   175 ;; Tracked objects:
   176 ;;		On entry : 0/0
   177 ;;		On exit  : 0/0
   178 ;;		Unchanged: 0/0
   179 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   180 ;;      Params:         0       0       0       0       0       0       0       0       0
   181 ;;      Locals:         0       0       0       0       0       0       0       0       0
   182 ;;      Temps:          0       0       0       0       0       0       0       0       0
   183 ;;      Totals:         0       0       0       0       0       0       0       0       0
   184 ;;Total ram usage:        0 bytes
   185 ;; Hardware stack levels required when called: 2
   186 ;; This function calls:
   187 ;;		_loop
   188 ;;		_setup
   189 ;; This function is called by:
   190 ;;		Startup code after reset
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           	psect	text0
   195   007EDE                     __ptext0:
   196                           	callstack 0
   197   007EDE                     _main:
   198                           	callstack 125
   199   007EDE                     
   200                           ;main.c: 83:     setup();
   201   007EDE  EC90  F03F         	call	_setup	;wreg free
   202   007EE2                     l782:
   203                           
   204                           ;main.c: 86:         loop();
   205   007EE2  ECD0  F03F         	call	_loop	;wreg free
   206   007EE6  EF71  F03F         	goto	l782
   207   007EEA  EFFE  F03F         	goto	start
   208   007EEE                     __end_of_main:
   209                           	callstack 0
   210                           
   211 ;; *************** function _setup *****************
   212 ;; Defined at:
   213 ;;		line 20 in file "main.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;		None
   218 ;; Return value:  Size  Location     Type
   219 ;;                  1    wreg      void 
   220 ;; Registers used:
   221 ;;		wreg, status,2
   222 ;; Tracked objects:
   223 ;;		On entry : 0/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   227 ;;      Params:         0       0       0       0       0       0       0       0       0
   228 ;;      Locals:         0       0       0       0       0       0       0       0       0
   229 ;;      Temps:          0       0       0       0       0       0       0       0       0
   230 ;;      Totals:         0       0       0       0       0       0       0       0       0
   231 ;;Total ram usage:        0 bytes
   232 ;; Hardware stack levels used: 1
   233 ;; This function calls:
   234 ;;		Nothing
   235 ;; This function is called by:
   236 ;;		_main
   237 ;; This function uses a non-reentrant model
   238 ;;
   239                           
   240                           	psect	text1
   241   007F20                     __ptext1:
   242                           	callstack 0
   243   007F20                     _setup:
   244                           	callstack 126
   245   000000                     nosup@@$_$_CONFIG	set	0	;# 
   246                           
   247                           ;main.c: 25:     OSCENbits.EXTOEN = 1;
   248   007F20  0100               	movlb	0	; () banked
   249   007F22  8FB3               	bsf	179,7,b	;volatile
   250   007F24                     
   251                           ; BSR set to: 0
   252                           ;main.c: 26:     OSCCON1bits.NOSC = 0b111;
   253   007F24  0E70               	movlw	112
   254   007F26  13AD               	iorwf	173,f,b	;volatile
   255                           
   256                           ;main.c: 29:     RC0PPS = 0x10;
   257   007F28  0E10               	movlw	16
   258   007F2A  0102               	movlb	2	; () banked
   259   007F2C  6F11               	movwf	17,b	;volatile
   260   007F2E                     
   261                           ; BSR set to: 2
   262                           ;main.c: 30:     TRISCbits.TRISC0 = 0;
   263   007F2E  90C8               	bcf	200,0,c	;volatile
   264                           
   265                           ;main.c: 31:     U1RXPPS = RC1;
   266   007F30  0E00               	movlw	0
   267   007F32  B2D0               	btfsc	1232,1,c	;volatile
   268   007F34  0E01               	movlw	1
   269   007F36  6F72               	movwf	114,b	;volatile
   270   007F38                     
   271                           ; BSR set to: 2
   272                           ;main.c: 32:     U1CON0bits.BRGS = 0;
   273   007F38  9FAB               	bcf	171,7,b	;volatile
   274                           
   275                           ;main.c: 33:     U1CON0bits.MODE = 0b0011;
   276   007F3A  51AB               	movf	171,w,b	;volatile
   277   007F3C  0BF0               	andlw	-16
   278   007F3E  0903               	iorlw	3
   279   007F40  6FAB               	movwf	171,b	;volatile
   280   007F42                     
   281                           ; BSR set to: 2
   282                           ;main.c: 34:     U1CON0bits.RXEN = 1;
   283   007F42  89AB               	bsf	171,4,b	;volatile
   284   007F44                     
   285                           ; BSR set to: 2
   286                           ;main.c: 35:     U1CON0bits.TXEN = 1;
   287   007F44  8BAB               	bsf	171,5,b	;volatile
   288   007F46                     
   289                           ; BSR set to: 2
   290                           ;main.c: 37:     U1CON2bits.RXPOL = 0;
   291   007F46  9DAD               	bcf	173,6,b	;volatile
   292   007F48                     
   293                           ; BSR set to: 2
   294                           ;main.c: 38:     U1CON2bits.TXPOL = 0;
   295   007F48  95AD               	bcf	173,2,b	;volatile
   296                           
   297                           ;main.c: 39:     U1CON2bits.STP = 0b00;
   298   007F4A  0ECF               	movlw	-49
   299   007F4C  17AD               	andwf	173,f,b	;volatile
   300   007F4E                     
   301                           ; BSR set to: 2
   302                           ;main.c: 52:     U1CON0bits.BRGS = 1;
   303   007F4E  8FAB               	bsf	171,7,b	;volatile
   304                           
   305                           ;main.c: 53:     U1BRGH = 0;
   306   007F50  0E00               	movlw	0
   307   007F52  6FAF               	movwf	175,b	;volatile
   308                           
   309                           ;main.c: 54:     U1BRGL = 0x19;
   310   007F54  0E19               	movlw	25
   311   007F56  6FAE               	movwf	174,b	;volatile
   312   007F58                     
   313                           ; BSR set to: 2
   314                           ;main.c: 56:     U1CON1bits.ON = 1;
   315   007F58  8FAC               	bsf	172,7,b	;volatile
   316   007F5A                     
   317                           ; BSR set to: 2
   318   007F5A  0012               	return		;funcret
   319   007F5C                     __end_of_setup:
   320                           	callstack 0
   321                           
   322 ;; *************** function _loop *****************
   323 ;; Defined at:
   324 ;;		line 59 in file "main.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;  i               2   10[COMRAM] int 
   329 ;;  msg             7    3[COMRAM] unsigned char [7]
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   339 ;;      Params:         0       0       0       0       0       0       0       0       0
   340 ;;      Locals:         9       0       0       0       0       0       0       0       0
   341 ;;      Temps:          0       0       0       0       0       0       0       0       0
   342 ;;      Totals:         9       0       0       0       0       0       0       0       0
   343 ;;Total ram usage:        9 bytes
   344 ;; Hardware stack levels used: 1
   345 ;; Hardware stack levels required when called: 1
   346 ;; This function calls:
   347 ;;		_TX
   348 ;; This function is called by:
   349 ;;		_main
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353                           	psect	text2
   354   007FA0                     __ptext2:
   355                           	callstack 0
   356   007FA0                     _loop:
   357                           	callstack 125
   358   007FA0                     
   359                           ;main.c: 61:     char msg[7] = "testing";
   360   007FA0  EE21  F117         	lfsr	2,loop@F13022
   361   007FA4  EE11  F104         	lfsr	1,loop@msg
   362   007FA8  0E06               	movlw	6
   363   007FAA                     u31:
   364   007FAA  C4DB F4E3          	movff	plusw2,plusw1
   365   007FAE  06E8               	decf	wreg,f,c
   366   007FB0  E2FC               	bc	u31
   367   007FB2                     
   368                           ;main.c: 62:     for(int i = 0; i<7; i++){
   369   007FB2  0E00               	movlw	0
   370   007FB4  6E0C               	movwf	(loop@i+1)^(0+1280),c
   371   007FB6  0E00               	movlw	0
   372   007FB8  6E0B               	movwf	loop@i^(0+1280),c
   373   007FBA                     l770:
   374                           
   375                           ;main.c: 63:         TX(msg[i]);
   376   007FBA  0E04               	movlw	low loop@msg
   377   007FBC  240B               	addwf	loop@i^(0+1280),w,c
   378   007FBE  6ED9               	movwf	fsr2l,c
   379   007FC0  0E05               	movlw	high loop@msg
   380   007FC2  200C               	addwfc	(loop@i+1)^(0+1280),w,c
   381   007FC4  6EDA               	movwf	fsr2h,c
   382   007FC6  50DF               	movf	indf2,w,c
   383   007FC8  ECAE  F03F         	call	_TX
   384   007FCC                     
   385                           ;main.c: 64:     }
   386   007FCC  4A0B               	infsnz	loop@i^(0+1280),f,c
   387   007FCE  2A0C               	incf	(loop@i+1)^(0+1280),f,c
   388   007FD0  BE0C               	btfsc	(loop@i+1)^(0+1280),7,c
   389   007FD2  EFF4  F03F         	goto	u41
   390   007FD6  500C               	movf	(loop@i+1)^(0+1280),w,c
   391   007FD8  E109               	bnz	u40
   392   007FDA  0E07               	movlw	7
   393   007FDC  5C0B               	subwf	loop@i^(0+1280),w,c
   394   007FDE  A0D8               	btfss	status,0,c
   395   007FE0  EFF4  F03F         	goto	u41
   396   007FE4  EFF6  F03F         	goto	u40
   397   007FE8                     u41:
   398   007FE8  EFDD  F03F         	goto	l770
   399   007FEC                     u40:
   400   007FEC                     
   401                           ;main.c: 65:     TX(0x09);
   402   007FEC  0E09               	movlw	9
   403   007FEE  ECAE  F03F         	call	_TX
   404   007FF2                     
   405                           ;main.c: 67:     _delay((unsigned long)((1)*(4000000/4000.0)));
   406   007FF2  0EC8               	movlw	200
   407   007FF4                     u57:
   408   007FF4  D000               	nop2	
   409   007FF6  2EE8               	decfsz	wreg,f,c
   410   007FF8  D7FD               	bra	u57
   411   007FFA  0012               	return		;funcret
   412   007FFC                     __end_of_loop:
   413                           	callstack 0
   414                           
   415 ;; *************** function _TX *****************
   416 ;; Defined at:
   417 ;;		line 14 in file "main.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;  data            1    wreg     unsigned char 
   420 ;; Auto vars:     Size  Location     Type
   421 ;;  data            1    2[COMRAM] unsigned char 
   422 ;;  timeout         2    0[COMRAM] int 
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, status,2, status,0
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   432 ;;      Params:         0       0       0       0       0       0       0       0       0
   433 ;;      Locals:         3       0       0       0       0       0       0       0       0
   434 ;;      Temps:          0       0       0       0       0       0       0       0       0
   435 ;;      Totals:         3       0       0       0       0       0       0       0       0
   436 ;;Total ram usage:        3 bytes
   437 ;; Hardware stack levels used: 1
   438 ;; This function calls:
   439 ;;		Nothing
   440 ;; This function is called by:
   441 ;;		_loop
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           	psect	text3
   446   007F5C                     __ptext3:
   447                           	callstack 0
   448   007F5C                     _TX:
   449                           	callstack 125
   450                           
   451                           ;incstack = 0
   452                           ;TX@data stored from wreg
   453   007F5C  6E03               	movwf	TX@data^(0+1280),c
   454   007F5E                     
   455                           ;main.c: 15:     int timeout = 0;
   456   007F5E  0E00               	movlw	0
   457   007F60  6E02               	movwf	(TX@timeout+1)^(0+1280),c
   458   007F62  0E00               	movlw	0
   459   007F64  6E01               	movwf	TX@timeout^(0+1280),c
   460                           
   461                           ;main.c: 16:     while(U1FIFObits.TXBF && timeout < 1000){timeout++;}
   462   007F66  EFB7  F03F         	goto	l738
   463   007F6A                     l736:
   464                           
   465                           ; BSR set to: 2
   466   007F6A  4A01               	infsnz	TX@timeout^(0+1280),f,c
   467   007F6C  2A02               	incf	(TX@timeout+1)^(0+1280),f,c
   468   007F6E                     l738:
   469   007F6E  0102               	movlb	2	; () banked
   470   007F70  A9B0               	btfss	176,4,b	;volatile
   471   007F72  EFBD  F03F         	goto	u11
   472   007F76  EFBF  F03F         	goto	u10
   473   007F7A                     u11:
   474   007F7A  EFCD  F03F         	goto	l39
   475   007F7E                     u10:
   476   007F7E                     
   477                           ; BSR set to: 2
   478   007F7E  BE02               	btfsc	(TX@timeout+1)^(0+1280),7,c
   479   007F80  EFCB  F03F         	goto	u21
   480   007F84  0EE8               	movlw	232
   481   007F86  5C01               	subwf	TX@timeout^(0+1280),w,c
   482   007F88  0E03               	movlw	3
   483   007F8A  5802               	subwfb	(TX@timeout+1)^(0+1280),w,c
   484   007F8C  A0D8               	btfss	status,0,c
   485   007F8E  EFCB  F03F         	goto	u21
   486   007F92  EFCD  F03F         	goto	u20
   487   007F96                     u21:
   488   007F96  EFB5  F03F         	goto	l736
   489   007F9A                     u20:
   490   007F9A                     l39:
   491                           
   492                           ; BSR set to: 2
   493                           ;main.c: 17:     U1TXB = data;
   494   007F9A  C503  F2A3         	movff	TX@data,675	;volatile
   495   007F9E                     
   496                           ; BSR set to: 2
   497   007F9E  0012               	return		;funcret
   498   007FA0                     __end_of_TX:
   499                           	callstack 0
   500   000000                     
   501                           	psect	rparam
   502   000000                     tosu	equ	0x4FF
   503                           tosh	equ	0x4FE
   504                           tosl	equ	0x4FD
   505                           stkptr	equ	0x4FC
   506                           pclatu	equ	0x4FB
   507                           pclath	equ	0x4FA
   508                           pcl	equ	0x4F9
   509                           tblptru	equ	0x4F8
   510                           tblptrh	equ	0x4F7
   511                           tblptrl	equ	0x4F6
   512                           tablat	equ	0x4F5
   513                           prodh	equ	0x4F4
   514                           prodl	equ	0x4F3
   515                           indf0	equ	0x4EF
   516                           postinc0	equ	0x4EE
   517                           postdec0	equ	0x4ED
   518                           preinc0	equ	0x4EC
   519                           plusw0	equ	0x4EB
   520                           fsr0h	equ	0x4EA
   521                           fsr0l	equ	0x4E9
   522                           wreg	equ	0x4E8
   523                           indf1	equ	0x4E7
   524                           postinc1	equ	0x4E6
   525                           postdec1	equ	0x4E5
   526                           preinc1	equ	0x4E4
   527                           plusw1	equ	0x4E3
   528                           fsr1h	equ	0x4E2
   529                           fsr1l	equ	0x4E1
   530                           bsr	equ	0x4E0
   531                           indf2	equ	0x4DF
   532                           postinc2	equ	0x4DE
   533                           postdec2	equ	0x4DD
   534                           preinc2	equ	0x4DC
   535                           plusw2	equ	0x4DB
   536                           fsr2h	equ	0x4DA
   537                           fsr2l	equ	0x4D9
   538                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      29
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_loop
    _loop->_TX

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      90
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 9     9      0      90
                                              3 COMRAM     9     9      0
                                 _TX
 ---------------------------------------------------------------------------------
 (2) _TX                                                   3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _TX
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
BITBIGSFRhl        217      0       0      24        0.0%
EEDATA             200      0       0       0        0.0%
BITBIGSFRllhl      15D      0       0      28        0.0%
BITBIGSFR_1        100      0       0      20        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRllll       AD      0       0      30        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRllhhl      60      0       0      27        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      C      1D       1       30.5%
BITBIGSFRllhhh      30      0       0      26        0.0%
BITBIGSFRhhh        2F      0       0      22        0.0%
BITBIGSFRhhl         7      0       0      23        0.0%
BITBIGSFRlhl         7      0       0      25        0.0%
BITBIGSFRlllh        5      0       0      29        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1D      31        0.0%
DATA                 0      0      1D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jul 26 09:51:31 2023

                     l40 7F9E                       l50 7FFA                       l43 7F5A  
                     l39 7F9A                       u10 7F7E                       u11 7F7A  
                     u20 7F9A                       u21 7F96                       u31 7FAA  
                     u40 7FEC                       u41 7FE8                       u57 7FF4  
                     _TX 7F5C                      ?_TX 0501                      l740 7F7E  
                    l734 7F5E                      l750 7F42                      l742 7F20  
                    l736 7F6A                      l760 7F58                      l752 7F44  
                    l744 7F24                      l738 7F6E                      l770 7FBA  
                    l762 7FA0                      l754 7F46                      l746 7F2E  
                    l772 7FCC                      l764 7FB2                      l756 7F48  
                    l748 7F38                      l780 7EDE                      l774 7FD0  
                    l758 7F4E                      l782 7EE2                      l776 7FEC  
                    l778 7FF2                      _RC1 2681                      wreg 04E8  
                   ??_TX 0501                     _main 7EDE                     _loop 7FA0  
                   indf2 04DF                     fsr1l 04E1                     fsr2l 04D9  
                   start 7FFC             ___param_bank 0000         nosup@@$_$_CONFIG 0000  
                  ?_main 0501                    ?_loop 0501                    _U1TXB 02A3  
                  _count 0515                    _setup 7F20                    tablat 04F5  
                  loop@i 050B                    plusw1 04E3                    plusw2 04DB  
                  status 04D8          __initialization 7EEE             __end_of_main 7EEE  
           __end_of_loop 7FFC                   ??_main 050D                   ??_loop 0504  
          __activetblptr 0000                   ?_setup 0501                   _U1BRGH 02AF  
                 _U1BRGL 02AE                   _RC0PPS 0211                   TX@data 0503  
                 clear_0 7F14                   isa$std 0001             __pdataCOMRAM 0517  
                 tblptrh 04F7                   tblptrl 04F6                   tblptru 04F8  
             __accesstop 0560  __end_of__initialization 7F1A            ___rparam_used 0001  
         __pcstackCOMRAM 0501            __end_of_setup 7F5C               __end_of_TX 7FA0  
                ??_setup 0501                  _U1RXPPS 0272                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7EEE                  __ramtop 0E00  
                __ptext0 7EDE                  __ptext1 7F20                  __ptext2 7FA0  
                __ptext3 7F5C                  _receive 050D     end_of_initialization 7F1A  
              TX@timeout 0501                  loop@msg 0504                _OSCENbits 00B3  
                postdec1 04E5                  postinc0 04EE                _TRISCbits 04C8  
          __pidataCOMRAM 7ED7      start_initialization 7EEE               loop@F13022 0517  
            __pbssCOMRAM 050D                copy_data0 7F02                 __Hrparam 0000  
               __Lrparam 0000               _U1CON0bits 02AB               _U1CON1bits 02AC  
             _U1CON2bits 02AD               _U1FIFObits 02B0              _OSCCON1bits 00AD  
               isa$xinst 0000  
