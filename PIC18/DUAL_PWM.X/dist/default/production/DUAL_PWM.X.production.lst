

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jun 22 09:24:05 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F15Q40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12   000000                     
    13                           ; Generated 23/03/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F15Q40 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47   000000                     _RB6PPS	set	527
    48   000000                     _TRISBbits	set	1223
    49   000000                     _TRISCbits	set	1224
    50   000000                     _RC7PPS	set	536
    51   000000                     _PWM1ERS	set	1120
    52   000000                     _PWM1PR	set	1123
    53   000000                     _PWM1CLK	set	1121
    54   000000                     _PWM1GIE	set	1128
    55   000000                     _PWM1CPRE	set	1125
    56   000000                     _PWM1S1P2	set	1133
    57   000000                     _PWM1S1P1	set	1131
    58   000000                     _PWM1S1CFGbits	set	1130
    59   000000                     _PWM1CONbits	set	1129
    60                           
    61                           ; #config settings
    62                           
    63                           	psect	cinit
    64   007F1C                     __pcinit:
    65                           	callstack 0
    66   007F1C                     start_initialization:
    67                           	callstack 0
    68   007F1C                     __initialization:
    69                           	callstack 0
    70   007F1C                     end_of_initialization:
    71                           	callstack 0
    72   007F1C                     __end_of__initialization:
    73                           	callstack 0
    74   007F1C  0100               	movlb	0
    75   007F1E  EF91  F03F         	goto	_main	;jump to C main() function
    76                           
    77                           	psect	cstackCOMRAM
    78   000501                     __pcstackCOMRAM:
    79                           	callstack 0
    80   000501                     ??_loop:
    81   000501                     
    82                           ; 1 bytes @ 0x0
    83   000501                     	ds	4
    84   000505                     loop@pwm11:
    85                           	callstack 0
    86                           
    87                           ; 2 bytes @ 0x4
    88   000505                     	ds	2
    89   000507                     loop@pwm12:
    90                           	callstack 0
    91                           
    92                           ; 2 bytes @ 0x6
    93   000507                     	ds	2
    94   000509                     loop@i:
    95                           	callstack 0
    96                           
    97                           ; 2 bytes @ 0x8
    98   000509                     	ds	2
    99   00050B                     
   100                           ; 1 bytes @ 0xA
   101 ;;
   102 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   103 ;;
   104 ;; *************** function _main *****************
   105 ;; Defined at:
   106 ;;		line 60 in file "main.c"
   107 ;; Parameters:    Size  Location     Type
   108 ;;		None
   109 ;; Auto vars:     Size  Location     Type
   110 ;;		None
   111 ;; Return value:  Size  Location     Type
   112 ;;                  1    wreg      void 
   113 ;; Registers used:
   114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   115 ;; Tracked objects:
   116 ;;		On entry : 0/0
   117 ;;		On exit  : 0/0
   118 ;;		Unchanged: 0/0
   119 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   120 ;;      Params:         0       0       0       0       0       0       0       0       0
   121 ;;      Locals:         0       0       0       0       0       0       0       0       0
   122 ;;      Temps:          0       0       0       0       0       0       0       0       0
   123 ;;      Totals:         0       0       0       0       0       0       0       0       0
   124 ;;Total ram usage:        0 bytes
   125 ;; Hardware stack levels required when called: 1
   126 ;; This function calls:
   127 ;;		_PWMsetup
   128 ;;		_loop
   129 ;; This function is called by:
   130 ;;		Startup code after reset
   131 ;; This function uses a non-reentrant model
   132 ;;
   133                           
   134                           	psect	text0
   135   007F22                     __ptext0:
   136                           	callstack 0
   137   007F22                     _main:
   138                           	callstack 126
   139   007F22                     
   140                           ;main.c: 61:     PWMsetup();
   141   007F22  EC99  F03F         	call	_PWMsetup	;wreg free
   142   007F26                     l756:
   143                           
   144                           ;main.c: 63:         loop();
   145   007F26  ECBE  F03F         	call	_loop	;wreg free
   146   007F2A  EF93  F03F         	goto	l756
   147   007F2E  EFFE  F03F         	goto	start
   148   007F32                     __end_of_main:
   149                           	callstack 0
   150                           
   151 ;; *************** function _loop *****************
   152 ;; Defined at:
   153 ;;		line 44 in file "main.c"
   154 ;; Parameters:    Size  Location     Type
   155 ;;		None
   156 ;; Auto vars:     Size  Location     Type
   157 ;;  i               2    8[COMRAM] unsigned short 
   158 ;;  pwm12           2    6[COMRAM] const PTR volatile int 
   159 ;;		 -> RAM(3327), 
   160 ;;  pwm11           2    4[COMRAM] const PTR volatile int 
   161 ;;		 -> RAM(3327), 
   162 ;;  buffer1         2    0        int 
   163 ;; Return value:  Size  Location     Type
   164 ;;                  1    wreg      void 
   165 ;; Registers used:
   166 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   167 ;; Tracked objects:
   168 ;;		On entry : 0/0
   169 ;;		On exit  : 0/0
   170 ;;		Unchanged: 0/0
   171 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   172 ;;      Params:         0       0       0       0       0       0       0       0       0
   173 ;;      Locals:         6       0       0       0       0       0       0       0       0
   174 ;;      Temps:          4       0       0       0       0       0       0       0       0
   175 ;;      Totals:        10       0       0       0       0       0       0       0       0
   176 ;;Total ram usage:       10 bytes
   177 ;; Hardware stack levels used: 1
   178 ;; This function calls:
   179 ;;		Nothing
   180 ;; This function is called by:
   181 ;;		_main
   182 ;; This function uses a non-reentrant model
   183 ;;
   184                           
   185                           	psect	text1
   186   007F7C                     __ptext1:
   187                           	callstack 0
   188   007F7C                     _loop:
   189                           	callstack 126
   190   007F7C                     
   191                           ;main.c: 46:     int volatile * const pwm11 = (int *) buffer1;
   192   007F7C  0E6B               	movlw	107
   193   007F7E  6E05               	movwf	loop@pwm11^(0+1280),c
   194   007F80  0E04               	movlw	4
   195   007F82  6E06               	movwf	(loop@pwm11+1)^(0+1280),c
   196   007F84                     
   197                           ;main.c: 47:     int volatile * const pwm12 = (int *) 0x46D;
   198   007F84  0E6D               	movlw	109
   199   007F86  6E07               	movwf	loop@pwm12^(0+1280),c
   200   007F88  0E04               	movlw	4
   201   007F8A  6E08               	movwf	(loop@pwm12+1)^(0+1280),c
   202                           
   203                           ;main.c: 48:     for(uint16_t i = 0; i < 0x00C8; i++){
   204   007F8C  0E00               	movlw	0
   205   007F8E  6E0A               	movwf	(loop@i+1)^(0+1280),c
   206   007F90  0E00               	movlw	0
   207   007F92  6E09               	movwf	loop@i^(0+1280),c
   208   007F94                     l34:
   209                           
   210                           ;main.c: 50:         PWM1CONbits.EN = 0;
   211   007F94  9E69               	bcf	105,7,c	;volatile
   212   007F96                     
   213                           ;main.c: 51:         *pwm11 = i;
   214   007F96  C505  F4D9         	movff	loop@pwm11,fsr2l
   215   007F9A  C506  F4DA         	movff	loop@pwm11+1,fsr2h
   216   007F9E  C509  F4DE         	movff	loop@i,postinc2
   217   007FA2  C50A  F4DD         	movff	loop@i+1,postdec2
   218   007FA6                     
   219                           ;main.c: 52:         *pwm12 = (0x00C8 - i)/2;
   220   007FA6  0EC8               	movlw	200
   221   007FA8  6E01               	movwf	??_loop^(0+1280),c
   222   007FAA  0E00               	movlw	0
   223   007FAC  6E02               	movwf	(??_loop+1)^(0+1280),c
   224   007FAE  5009               	movf	loop@i^(0+1280),w,c
   225   007FB0  5E01               	subwf	??_loop^(0+1280),f,c
   226   007FB2  500A               	movf	(loop@i+1)^(0+1280),w,c
   227   007FB4  5A02               	subwfb	(??_loop+1)^(0+1280),f,c
   228   007FB6  90D8               	bcf	status,0,c
   229   007FB8  3002               	rrcf	(??_loop+1)^(0+1280),w,c
   230   007FBA  6E04               	movwf	(??_loop+3)^(0+1280),c
   231   007FBC  3001               	rrcf	??_loop^(0+1280),w,c
   232   007FBE  6E03               	movwf	(??_loop+2)^(0+1280),c
   233   007FC0  C507  F4D9         	movff	loop@pwm12,fsr2l
   234   007FC4  C508  F4DA         	movff	loop@pwm12+1,fsr2h
   235   007FC8  C503  F4DE         	movff	??_loop+2,postinc2
   236   007FCC  C504  F4DD         	movff	??_loop+3,postdec2
   237   007FD0                     
   238                           ;main.c: 54:         PWM1CONbits.EN = 1;
   239   007FD0  8E69               	bsf	105,7,c	;volatile
   240   007FD2                     
   241                           ;main.c: 56:         _delay((unsigned long)((10)*(4000000/4000.0)));
   242   007FD2  0E0D               	movlw	13
   243   007FD4  6E01               	movwf	??_loop^(0+1280),c
   244   007FD6  0EFC               	movlw	252
   245   007FD8                     u27:
   246   007FD8  2EE8               	decfsz	wreg,f,c
   247   007FDA  D7FE               	bra	u27
   248   007FDC  2E01               	decfsz	??_loop^(0+1280),f,c
   249   007FDE  D7FC               	bra	u27
   250                           
   251                           ;main.c: 57:     }
   252   007FE0  4A09               	infsnz	loop@i^(0+1280),f,c
   253   007FE2  2A0A               	incf	(loop@i+1)^(0+1280),f,c
   254   007FE4  500A               	movf	(loop@i+1)^(0+1280),w,c
   255   007FE6  E109               	bnz	u10
   256   007FE8  0EC8               	movlw	200
   257   007FEA  5C09               	subwf	loop@i^(0+1280),w,c
   258   007FEC  A0D8               	btfss	status,0,c
   259   007FEE  EFFB  F03F         	goto	u11
   260   007FF2  EFFD  F03F         	goto	u10
   261   007FF6                     u11:
   262   007FF6  EFCA  F03F         	goto	l34
   263   007FFA                     u10:
   264   007FFA  0012               	return		;funcret
   265   007FFC                     __end_of_loop:
   266                           	callstack 0
   267                           
   268 ;; *************** function _PWMsetup *****************
   269 ;; Defined at:
   270 ;;		line 13 in file "main.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;		None
   275 ;; Return value:  Size  Location     Type
   276 ;;                  1    wreg      void 
   277 ;; Registers used:
   278 ;;		wreg, status,2
   279 ;; Tracked objects:
   280 ;;		On entry : 0/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   284 ;;      Params:         0       0       0       0       0       0       0       0       0
   285 ;;      Locals:         0       0       0       0       0       0       0       0       0
   286 ;;      Temps:          0       0       0       0       0       0       0       0       0
   287 ;;      Totals:         0       0       0       0       0       0       0       0       0
   288 ;;Total ram usage:        0 bytes
   289 ;; Hardware stack levels used: 1
   290 ;; This function calls:
   291 ;;		Nothing
   292 ;; This function is called by:
   293 ;;		_main
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           	psect	text2
   298   007F32                     __ptext2:
   299                           	callstack 0
   300   007F32                     _PWMsetup:
   301                           	callstack 126
   302   007F32                     
   303                           ;main.c: 15:     TRISCbits.TRISC7 = 0;
   304   007F32  9EC8               	bcf	200,7,c	;volatile
   305                           
   306                           ;main.c: 16:     TRISBbits.TRISB6 = 0;
   307   007F34  9CC7               	bcf	199,6,c	;volatile
   308   007F36                     
   309                           ;main.c: 18:     RB6PPS = 0x0A;
   310   007F36  0E0A               	movlw	10
   311   007F38  0102               	movlb	2	; () banked
   312   007F3A  6F0F               	movwf	15,b	;volatile
   313                           
   314                           ;main.c: 19:     RC7PPS = 0x0B;
   315   007F3C  0E0B               	movlw	11
   316   007F3E  6F18               	movwf	24,b	;volatile
   317                           
   318                           ;main.c: 21:     PWM1ERS = 0b0000;
   319   007F40  0E00               	movlw	0
   320   007F42  6E60               	movwf	96,c	;volatile
   321                           
   322                           ;main.c: 22:     PWM1CLK = 0b0010;
   323   007F44  0E02               	movlw	2
   324   007F46  6E61               	movwf	97,c	;volatile
   325                           
   326                           ;main.c: 25:     PWM1PR = 0x00C7;
   327   007F48  0E00               	movlw	0
   328   007F4A  6E64               	movwf	100,c	;volatile
   329   007F4C  0EC7               	movlw	199
   330   007F4E  6E63               	movwf	99,c	;volatile
   331                           
   332                           ;main.c: 26:     PWM1CPRE = 0x00;
   333   007F50  0E00               	movlw	0
   334   007F52  6E65               	movwf	101,c	;volatile
   335                           
   336                           ;main.c: 27:     PWM1GIE = 0x00;
   337   007F54  0E00               	movlw	0
   338   007F56  6E68               	movwf	104,c	;volatile
   339   007F58                     
   340                           ; BSR set to: 2
   341                           ;main.c: 28:     PWM1CONbits.LD = 1;
   342   007F58  8469               	bsf	105,2,c	;volatile
   343   007F5A                     
   344                           ; BSR set to: 2
   345                           ;main.c: 32:     PWM1S1CFGbits.POL1 = 0;
   346   007F5A  9C6A               	bcf	106,6,c	;volatile
   347   007F5C                     
   348                           ; BSR set to: 2
   349                           ;main.c: 33:     PWM1S1CFGbits.POL2 = 0;
   350   007F5C  9E6A               	bcf	106,7,c	;volatile
   351   007F5E                     
   352                           ; BSR set to: 2
   353                           ;main.c: 35:     PWM1S1CFGbits.PPEN = 0;
   354   007F5E  966A               	bcf	106,3,c	;volatile
   355                           
   356                           ;main.c: 36:     PWM1S1CFGbits.MODE = 0b001;
   357   007F60  506A               	movf	106,w,c	;volatile
   358   007F62  0BF8               	andlw	-8
   359   007F64  0901               	iorlw	1
   360   007F66  6E6A               	movwf	106,c	;volatile
   361                           
   362                           ;main.c: 38:     PWM1S1P1 = 0x0000;
   363   007F68  0E00               	movlw	0
   364   007F6A  6E6C               	movwf	108,c	;volatile
   365   007F6C  0E00               	movlw	0
   366   007F6E  6E6B               	movwf	107,c	;volatile
   367                           
   368                           ;main.c: 39:     PWM1S1P2 = 0x0000;
   369   007F70  0E00               	movlw	0
   370   007F72  6E6E               	movwf	110,c	;volatile
   371   007F74  0E00               	movlw	0
   372   007F76  6E6D               	movwf	109,c	;volatile
   373   007F78                     
   374                           ; BSR set to: 2
   375                           ;main.c: 41:     PWM1CONbits.EN = 1;
   376   007F78  8E69               	bsf	105,7,c	;volatile
   377   007F7A                     
   378                           ; BSR set to: 2
   379   007F7A  0012               	return		;funcret
   380   007F7C                     __end_of_PWMsetup:
   381                           	callstack 0
   382   000000                     
   383                           	psect	rparam
   384   000000                     tosu	equ	0x4FF
   385                           tosh	equ	0x4FE
   386                           tosl	equ	0x4FD
   387                           stkptr	equ	0x4FC
   388                           pclatu	equ	0x4FB
   389                           pclath	equ	0x4FA
   390                           pcl	equ	0x4F9
   391                           tblptru	equ	0x4F8
   392                           tblptrh	equ	0x4F7
   393                           tblptrl	equ	0x4F6
   394                           tablat	equ	0x4F5
   395                           prodh	equ	0x4F4
   396                           prodl	equ	0x4F3
   397                           indf0	equ	0x4EF
   398                           postinc0	equ	0x4EE
   399                           postdec0	equ	0x4ED
   400                           preinc0	equ	0x4EC
   401                           plusw0	equ	0x4EB
   402                           fsr0h	equ	0x4EA
   403                           fsr0l	equ	0x4E9
   404                           wreg	equ	0x4E8
   405                           indf1	equ	0x4E7
   406                           postinc1	equ	0x4E6
   407                           postdec1	equ	0x4E5
   408                           preinc1	equ	0x4E4
   409                           plusw1	equ	0x4E3
   410                           fsr1h	equ	0x4E2
   411                           fsr1l	equ	0x4E1
   412                           bsr	equ	0x4E0
   413                           indf2	equ	0x4DF
   414                           postinc2	equ	0x4DE
   415                           postdec2	equ	0x4DD
   416                           preinc2	equ	0x4DC
   417                           plusw2	equ	0x4DB
   418                           fsr2h	equ	0x4DA
   419                           fsr2l	equ	0x4D9
   420                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      10
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    loop@pwm12	const PTR volatile int  size(2) Largest target is 3327
		 -> RAM(DATA[3327]), 

    loop@pwm11	const PTR volatile int  size(2) Largest target is 3327
		 -> RAM(DATA[3327]), 


Critical Paths under _main in COMRAM

    _main->_loop

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     105
                           _PWMsetup
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                12    12      0     105
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _PWMsetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWMsetup
   _loop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             200      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      A       A       1       10.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBIGSFR_1        100      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITBIGSFRh          37      0       0      22        0.0%
BITBIGSFRlhhhhh     58      0       0      23        0.0%
BITBIGSFRlhhhhl      2      0       0      24        0.0%
BITBIGSFRlhhhl       1      0       0      25        0.0%
BITBIGSFRlhhl      247      0       0      26        0.0%
BITBIGSFRlhl         8      0       0      27        0.0%
BITBIGSFRll        20F      0       0      28        0.0%
ABS                  0      0       0      29        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jun 22 09:24:05 2023

                     l31 7F7A                       l34 7F94                       l36 7FFA  
                     u10 7FFA                       u11 7FF6                       u27 7FD8  
                    l720 7F32                      l730 7F5E                      l722 7F36  
                    l732 7F78                      l724 7F58                      l726 7F5A  
                    l750 7FD2                      l734 7F7C                      l728 7F5C  
                    l752 7FE4                      l744 7F96                      l736 7F7C  
                    l746 7FA6                      l738 7F84                      l754 7F22  
                    l748 7FD0                      l756 7F26                      wreg 04E8  
                   _main 7F22                     _loop 7F7C                     fsr2h 04DA  
                   fsr2l 04D9                     start 7FFC             ___param_bank 0000  
                  ?_main 0501                    ?_loop 0501                    loop@i 0509  
                  status 04D8         __end_of_PWMsetup 7F7C          __initialization 7F1C  
           __end_of_main 7F32             __end_of_loop 7FFC                   ??_main 050B  
                 ??_loop 0501            __activetblptr 0000                   _RB6PPS 020F  
                 _RC7PPS 0218                   _PWM1PR 0463                   isa$std 0001  
             __accesstop 0560  __end_of__initialization 7F1C            ___rparam_used 0001  
         __pcstackCOMRAM 0501                ?_PWMsetup 0501               ??_PWMsetup 0501  
                _PWM1CLK 0461                  _PWM1GIE 0468                  _PWM1ERS 0460  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F1C  
                __ramtop 0E00                  __ptext0 7F22                  __ptext1 7F7C  
                __ptext2 7F32     end_of_initialization 7F1C                  postdec2 04DD  
                postinc2 04DE                _TRISBbits 04C7                _TRISCbits 04C8  
          _PWM1S1CFGbits 046A      start_initialization 7F1C                 _PWM1S1P1 046B  
               _PWM1S1P2 046D                 _PWM1CPRE 0465                 _PWMsetup 7F32  
               __Hrparam 0000                 __Lrparam 0000                loop@pwm11 0505  
              loop@pwm12 0507                 isa$xinst 0000              _PWM1CONbits 0469  
