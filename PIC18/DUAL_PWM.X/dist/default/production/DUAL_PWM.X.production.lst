

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Aug 16 16:05:57 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F15Q40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12   000000                     
    13                           ; Generated 23/03/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F15Q40 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47   000000                     _RB7PPS	set	528
    48   000000                     _TRISBbits	set	1223
    49   000000                     _TRISCbits	set	1224
    50   000000                     _RC7PPS	set	536
    51   000000                     _PWM1ERS	set	1120
    52   000000                     _PWM1PR	set	1123
    53   000000                     _PWM1CLK	set	1121
    54   000000                     _PWM1GIE	set	1128
    55   000000                     _PWM1CPRE	set	1125
    56   000000                     _PWM1S1P2	set	1133
    57   000000                     _PWM1S1P1	set	1131
    58   000000                     _PWM1S1CFGbits	set	1130
    59   000000                     _PWM1CONbits	set	1129
    60                           
    61                           ; #config settings
    62                           
    63                           	psect	cinit
    64   007F1E                     __pcinit:
    65                           	callstack 0
    66   007F1E                     start_initialization:
    67                           	callstack 0
    68   007F1E                     __initialization:
    69                           	callstack 0
    70   007F1E                     end_of_initialization:
    71                           	callstack 0
    72   007F1E                     __end_of__initialization:
    73                           	callstack 0
    74   007F1E  0100               	movlb	0
    75   007F20  EF92  F03F         	goto	_main	;jump to C main() function
    76                           
    77                           	psect	cstackCOMRAM
    78   000501                     __pcstackCOMRAM:
    79                           	callstack 0
    80   000501                     ??_loop:
    81   000501                     
    82                           ; 1 bytes @ 0x0
    83   000501                     	ds	2
    84   000503                     loop@buffer2:
    85                           	callstack 0
    86                           
    87                           ; 2 bytes @ 0x2
    88   000503                     	ds	2
    89   000505                     loop@pwm11:
    90                           	callstack 0
    91                           
    92                           ; 2 bytes @ 0x4
    93   000505                     	ds	2
    94   000507                     loop@pwm12:
    95                           	callstack 0
    96                           
    97                           ; 2 bytes @ 0x6
    98   000507                     	ds	2
    99   000509                     loop@i:
   100                           	callstack 0
   101                           
   102                           ; 2 bytes @ 0x8
   103   000509                     	ds	2
   104   00050B                     
   105                           ; 1 bytes @ 0xA
   106 ;;
   107 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   108 ;;
   109 ;; *************** function _main *****************
   110 ;; Defined at:
   111 ;;		line 67 in file "main.c"
   112 ;; Parameters:    Size  Location     Type
   113 ;;		None
   114 ;; Auto vars:     Size  Location     Type
   115 ;;		None
   116 ;; Return value:  Size  Location     Type
   117 ;;                  1    wreg      void 
   118 ;; Registers used:
   119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   120 ;; Tracked objects:
   121 ;;		On entry : 0/0
   122 ;;		On exit  : 0/0
   123 ;;		Unchanged: 0/0
   124 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   125 ;;      Params:         0       0       0       0       0       0       0       0       0
   126 ;;      Locals:         0       0       0       0       0       0       0       0       0
   127 ;;      Temps:          0       0       0       0       0       0       0       0       0
   128 ;;      Totals:         0       0       0       0       0       0       0       0       0
   129 ;;Total ram usage:        0 bytes
   130 ;; Hardware stack levels required when called: 1
   131 ;; This function calls:
   132 ;;		_PWMsetup
   133 ;;		_loop
   134 ;; This function is called by:
   135 ;;		Startup code after reset
   136 ;; This function uses a non-reentrant model
   137 ;;
   138                           
   139                           	psect	text0
   140   007F24                     __ptext0:
   141                           	callstack 0
   142   007F24                     _main:
   143                           	callstack 126
   144   007F24                     
   145                           ;main.c: 68:     PWMsetup();
   146   007F24  EC9A  F03F         	call	_PWMsetup	;wreg free
   147   007F28                     l756:
   148                           
   149                           ;main.c: 70:         loop();
   150   007F28  ECBF  F03F         	call	_loop	;wreg free
   151   007F2C  EF94  F03F         	goto	l756
   152   007F30  EFFE  F03F         	goto	start
   153   007F34                     __end_of_main:
   154                           	callstack 0
   155                           
   156 ;; *************** function _loop *****************
   157 ;; Defined at:
   158 ;;		line 44 in file "main.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;  i               2    8[COMRAM] unsigned short 
   163 ;;  pwm12           2    6[COMRAM] const PTR volatile int 
   164 ;;		 -> RAM(3327), 
   165 ;;  pwm11           2    4[COMRAM] const PTR volatile int 
   166 ;;		 -> RAM(3327), 
   167 ;;  buffer2         2    2[COMRAM] int 
   168 ;;  buffer1         2    0        int 
   169 ;; Return value:  Size  Location     Type
   170 ;;                  1    wreg      void 
   171 ;; Registers used:
   172 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   173 ;; Tracked objects:
   174 ;;		On entry : 0/0
   175 ;;		On exit  : 0/0
   176 ;;		Unchanged: 0/0
   177 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   178 ;;      Params:         0       0       0       0       0       0       0       0       0
   179 ;;      Locals:         8       0       0       0       0       0       0       0       0
   180 ;;      Temps:          2       0       0       0       0       0       0       0       0
   181 ;;      Totals:        10       0       0       0       0       0       0       0       0
   182 ;;Total ram usage:       10 bytes
   183 ;; Hardware stack levels used: 1
   184 ;; This function calls:
   185 ;;		Nothing
   186 ;; This function is called by:
   187 ;;		_main
   188 ;; This function uses a non-reentrant model
   189 ;;
   190                           
   191                           	psect	text1
   192   007F7E                     __ptext1:
   193                           	callstack 0
   194   007F7E                     _loop:
   195                           	callstack 126
   196   007F7E                     
   197                           ;main.c: 48:     int buffer2 = 0x46D;
   198   007F7E  0E04               	movlw	4
   199   007F80  6E04               	movwf	(loop@buffer2+1)^(0+1280),c
   200   007F82  0E6D               	movlw	109
   201   007F84  6E03               	movwf	loop@buffer2^(0+1280),c
   202   007F86                     
   203                           ;main.c: 51:     int volatile * const pwm11 = (int *) buffer1;
   204   007F86  0E6B               	movlw	107
   205   007F88  6E05               	movwf	loop@pwm11^(0+1280),c
   206   007F8A  0E04               	movlw	4
   207   007F8C  6E06               	movwf	(loop@pwm11+1)^(0+1280),c
   208   007F8E                     
   209                           ;main.c: 52:     int volatile * const pwm12 = (int *) buffer2;
   210   007F8E  0E6D               	movlw	109
   211   007F90  6E07               	movwf	loop@pwm12^(0+1280),c
   212   007F92  0E04               	movlw	4
   213   007F94  6E08               	movwf	(loop@pwm12+1)^(0+1280),c
   214                           
   215                           ;main.c: 55:     for(uint16_t i = 20; i < 0x00C0; i++){
   216   007F96  0E00               	movlw	0
   217   007F98  6E0A               	movwf	(loop@i+1)^(0+1280),c
   218   007F9A  0E14               	movlw	20
   219   007F9C  6E09               	movwf	loop@i^(0+1280),c
   220   007F9E                     l34:
   221                           
   222                           ;main.c: 57:         PWM1CONbits.EN = 0;
   223   007F9E  9E69               	bcf	105,7,c	;volatile
   224   007FA0                     
   225                           ;main.c: 58:         *pwm11 = i;
   226   007FA0  C505  F4D9         	movff	loop@pwm11,fsr2l
   227   007FA4  C506  F4DA         	movff	loop@pwm11+1,fsr2h
   228   007FA8  C509  F4DE         	movff	loop@i,postinc2
   229   007FAC  C50A  F4DD         	movff	loop@i+1,postdec2
   230   007FB0                     
   231                           ;main.c: 59:         *pwm12 = (0x00C8 - i);
   232   007FB0  0EC8               	movlw	200
   233   007FB2  6E01               	movwf	??_loop^(0+1280),c
   234   007FB4  0E00               	movlw	0
   235   007FB6  6E02               	movwf	(??_loop+1)^(0+1280),c
   236   007FB8  5009               	movf	loop@i^(0+1280),w,c
   237   007FBA  5E01               	subwf	??_loop^(0+1280),f,c
   238   007FBC  500A               	movf	(loop@i+1)^(0+1280),w,c
   239   007FBE  5A02               	subwfb	(??_loop+1)^(0+1280),f,c
   240   007FC0  C507  F4D9         	movff	loop@pwm12,fsr2l
   241   007FC4  C508  F4DA         	movff	loop@pwm12+1,fsr2h
   242   007FC8  C501  F4DE         	movff	??_loop,postinc2
   243   007FCC  C502  F4DD         	movff	??_loop+1,postdec2
   244   007FD0                     
   245                           ;main.c: 61:         PWM1CONbits.EN = 1;
   246   007FD0  8E69               	bsf	105,7,c	;volatile
   247   007FD2                     
   248                           ;main.c: 63:         _delay((unsigned long)((10)*(4000000/4000.0)));
   249   007FD2  0E0D               	movlw	13
   250   007FD4  6E01               	movwf	??_loop^(0+1280),c
   251   007FD6  0EFC               	movlw	252
   252   007FD8                     u27:
   253   007FD8  2EE8               	decfsz	wreg,f,c
   254   007FDA  D7FE               	bra	u27
   255   007FDC  2E01               	decfsz	??_loop^(0+1280),f,c
   256   007FDE  D7FC               	bra	u27
   257                           
   258                           ;main.c: 64:     }
   259   007FE0  4A09               	infsnz	loop@i^(0+1280),f,c
   260   007FE2  2A0A               	incf	(loop@i+1)^(0+1280),f,c
   261   007FE4  500A               	movf	(loop@i+1)^(0+1280),w,c
   262   007FE6  E109               	bnz	u10
   263   007FE8  0EC0               	movlw	192
   264   007FEA  5C09               	subwf	loop@i^(0+1280),w,c
   265   007FEC  A0D8               	btfss	status,0,c
   266   007FEE  EFFB  F03F         	goto	u11
   267   007FF2  EFFD  F03F         	goto	u10
   268   007FF6                     u11:
   269   007FF6  EFCF  F03F         	goto	l34
   270   007FFA                     u10:
   271   007FFA  0012               	return		;funcret
   272   007FFC                     __end_of_loop:
   273                           	callstack 0
   274                           
   275 ;; *************** function _PWMsetup *****************
   276 ;; Defined at:
   277 ;;		line 13 in file "main.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;		None
   280 ;; Auto vars:     Size  Location     Type
   281 ;;		None
   282 ;; Return value:  Size  Location     Type
   283 ;;                  1    wreg      void 
   284 ;; Registers used:
   285 ;;		wreg, status,2
   286 ;; Tracked objects:
   287 ;;		On entry : 0/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   291 ;;      Params:         0       0       0       0       0       0       0       0       0
   292 ;;      Locals:         0       0       0       0       0       0       0       0       0
   293 ;;      Temps:          0       0       0       0       0       0       0       0       0
   294 ;;      Totals:         0       0       0       0       0       0       0       0       0
   295 ;;Total ram usage:        0 bytes
   296 ;; Hardware stack levels used: 1
   297 ;; This function calls:
   298 ;;		Nothing
   299 ;; This function is called by:
   300 ;;		_main
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           	psect	text2
   305   007F34                     __ptext2:
   306                           	callstack 0
   307   007F34                     _PWMsetup:
   308                           	callstack 126
   309   007F34                     
   310                           ;main.c: 15:     TRISCbits.TRISC7 = 0;
   311   007F34  9EC8               	bcf	200,7,c	;volatile
   312                           
   313                           ;main.c: 16:     TRISBbits.TRISB7 = 0;
   314   007F36  9EC7               	bcf	199,7,c	;volatile
   315   007F38                     
   316                           ;main.c: 18:     RB7PPS = 0x0A;
   317   007F38  0E0A               	movlw	10
   318   007F3A  0102               	movlb	2	; () banked
   319   007F3C  6F10               	movwf	16,b	;volatile
   320                           
   321                           ;main.c: 19:     RC7PPS = 0x0B;
   322   007F3E  0E0B               	movlw	11
   323   007F40  6F18               	movwf	24,b	;volatile
   324                           
   325                           ;main.c: 21:     PWM1ERS = 0b0000;
   326   007F42  0E00               	movlw	0
   327   007F44  6E60               	movwf	96,c	;volatile
   328                           
   329                           ;main.c: 22:     PWM1CLK = 0b0010;
   330   007F46  0E02               	movlw	2
   331   007F48  6E61               	movwf	97,c	;volatile
   332                           
   333                           ;main.c: 25:     PWM1PR = 0x00C7;
   334   007F4A  0E00               	movlw	0
   335   007F4C  6E64               	movwf	100,c	;volatile
   336   007F4E  0EC7               	movlw	199
   337   007F50  6E63               	movwf	99,c	;volatile
   338                           
   339                           ;main.c: 26:     PWM1CPRE = 0x00;
   340   007F52  0E00               	movlw	0
   341   007F54  6E65               	movwf	101,c	;volatile
   342                           
   343                           ;main.c: 27:     PWM1GIE = 0x00;
   344   007F56  0E00               	movlw	0
   345   007F58  6E68               	movwf	104,c	;volatile
   346   007F5A                     
   347                           ; BSR set to: 2
   348                           ;main.c: 28:     PWM1CONbits.LD = 1;
   349   007F5A  8469               	bsf	105,2,c	;volatile
   350   007F5C                     
   351                           ; BSR set to: 2
   352                           ;main.c: 32:     PWM1S1CFGbits.POL1 = 0;
   353   007F5C  9C6A               	bcf	106,6,c	;volatile
   354   007F5E                     
   355                           ; BSR set to: 2
   356                           ;main.c: 33:     PWM1S1CFGbits.POL2 = 0;
   357   007F5E  9E6A               	bcf	106,7,c	;volatile
   358   007F60                     
   359                           ; BSR set to: 2
   360                           ;main.c: 35:     PWM1S1CFGbits.PPEN = 0;
   361   007F60  966A               	bcf	106,3,c	;volatile
   362                           
   363                           ;main.c: 36:     PWM1S1CFGbits.MODE = 0b001;
   364   007F62  506A               	movf	106,w,c	;volatile
   365   007F64  0BF8               	andlw	-8
   366   007F66  0901               	iorlw	1
   367   007F68  6E6A               	movwf	106,c	;volatile
   368                           
   369                           ;main.c: 38:     PWM1S1P1 = 0x0000;
   370   007F6A  0E00               	movlw	0
   371   007F6C  6E6C               	movwf	108,c	;volatile
   372   007F6E  0E00               	movlw	0
   373   007F70  6E6B               	movwf	107,c	;volatile
   374                           
   375                           ;main.c: 39:     PWM1S1P2 = 0x0000;
   376   007F72  0E00               	movlw	0
   377   007F74  6E6E               	movwf	110,c	;volatile
   378   007F76  0E00               	movlw	0
   379   007F78  6E6D               	movwf	109,c	;volatile
   380   007F7A                     
   381                           ; BSR set to: 2
   382                           ;main.c: 41:     PWM1CONbits.EN = 1;
   383   007F7A  8E69               	bsf	105,7,c	;volatile
   384   007F7C                     
   385                           ; BSR set to: 2
   386   007F7C  0012               	return		;funcret
   387   007F7E                     __end_of_PWMsetup:
   388                           	callstack 0
   389   000000                     
   390                           	psect	rparam
   391   000000                     tosu	equ	0x4FF
   392                           tosh	equ	0x4FE
   393                           tosl	equ	0x4FD
   394                           stkptr	equ	0x4FC
   395                           pclatu	equ	0x4FB
   396                           pclath	equ	0x4FA
   397                           pcl	equ	0x4F9
   398                           tblptru	equ	0x4F8
   399                           tblptrh	equ	0x4F7
   400                           tblptrl	equ	0x4F6
   401                           tablat	equ	0x4F5
   402                           prodh	equ	0x4F4
   403                           prodl	equ	0x4F3
   404                           indf0	equ	0x4EF
   405                           postinc0	equ	0x4EE
   406                           postdec0	equ	0x4ED
   407                           preinc0	equ	0x4EC
   408                           plusw0	equ	0x4EB
   409                           fsr0h	equ	0x4EA
   410                           fsr0l	equ	0x4E9
   411                           wreg	equ	0x4E8
   412                           indf1	equ	0x4E7
   413                           postinc1	equ	0x4E6
   414                           postdec1	equ	0x4E5
   415                           preinc1	equ	0x4E4
   416                           plusw1	equ	0x4E3
   417                           fsr1h	equ	0x4E2
   418                           fsr1l	equ	0x4E1
   419                           bsr	equ	0x4E0
   420                           indf2	equ	0x4DF
   421                           postinc2	equ	0x4DE
   422                           postdec2	equ	0x4DD
   423                           preinc2	equ	0x4DC
   424                           plusw2	equ	0x4DB
   425                           fsr2h	equ	0x4DA
   426                           fsr2l	equ	0x4D9
   427                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      10
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    loop@pwm12	const PTR volatile int  size(2) Largest target is 3327
		 -> RAM(DATA[3327]), 

    loop@pwm11	const PTR volatile int  size(2) Largest target is 3327
		 -> RAM(DATA[3327]), 


Critical Paths under _main in COMRAM

    _main->_loop

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     120
                           _PWMsetup
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                12    12      0     120
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _PWMsetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWMsetup
   _loop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             200      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      A       A       1       10.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBIGSFR_1        100      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITBIGSFRh          37      0       0      22        0.0%
BITBIGSFRlhhhhh     58      0       0      23        0.0%
BITBIGSFRlhhhhl      2      0       0      24        0.0%
BITBIGSFRlhhhl       1      0       0      25        0.0%
BITBIGSFRlhhl      247      0       0      26        0.0%
BITBIGSFRlhl         7      0       0      27        0.0%
BITBIGSFRll        210      0       0      28        0.0%
ABS                  0      0       0      29        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Aug 16 16:05:57 2023

                     l31 7F7C                       l34 7F9E                       l36 7FFA  
                     u10 7FFA                       u11 7FF6                       u27 7FD8  
                    l720 7F34                      l730 7F60                      l722 7F38  
                    l732 7F7A                      l724 7F5A                      l726 7F5C  
                    l750 7FD2                      l734 7F7E                      l728 7F5E  
                    l752 7FE4                      l744 7FA0                      l736 7F86  
                    l746 7FB0                      l738 7F8E                      l754 7F24  
                    l748 7FD0                      l756 7F28                      wreg 04E8  
                   _main 7F24                     _loop 7F7E                     fsr2h 04DA  
                   fsr2l 04D9                     start 7FFC             ___param_bank 0000  
                  ?_main 0501                    ?_loop 0501                    loop@i 0509  
                  status 04D8         __end_of_PWMsetup 7F7E          __initialization 7F1E  
           __end_of_main 7F34             __end_of_loop 7FFC                   ??_main 050B  
                 ??_loop 0501            __activetblptr 0000                   _RB7PPS 0210  
                 _RC7PPS 0218                   _PWM1PR 0463                   isa$std 0001  
             __accesstop 0560  __end_of__initialization 7F1E            ___rparam_used 0001  
         __pcstackCOMRAM 0501                ?_PWMsetup 0501              loop@buffer2 0503  
             ??_PWMsetup 0501                  _PWM1CLK 0461                  _PWM1GIE 0468  
                _PWM1ERS 0460                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7F1E                  __ramtop 0E00                  __ptext0 7F24  
                __ptext1 7F7E                  __ptext2 7F34     end_of_initialization 7F1E  
                postdec2 04DD                  postinc2 04DE                _TRISBbits 04C7  
              _TRISCbits 04C8            _PWM1S1CFGbits 046A      start_initialization 7F1E  
               _PWM1S1P1 046B                 _PWM1S1P2 046D                 _PWM1CPRE 0465  
               _PWMsetup 7F34                 __Hrparam 0000                 __Lrparam 0000  
              loop@pwm11 0505                loop@pwm12 0507                 isa$xinst 0000  
            _PWM1CONbits 0469  
